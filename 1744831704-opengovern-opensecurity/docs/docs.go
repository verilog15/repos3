// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/api/v1/connector/supported-connector-types": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creates new OIDC connector.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "Create Connector",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/api/v1/key/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creates workspace key for the defined role with the defined name in the workspace.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Create Workspace Key",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.CreateAPIKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.CreateAPIKeyResponse"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/auth/api/v1/key/{id}/delete": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Deletes the specified workspace key by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Delete Workspace Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/api/v1/keys": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Gets list of all keys.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Get API keys List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.APIKeyResponse"
                            }
                        }
                    }
                }
            }
        },
        "/auth/api/v1/me": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns my user details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.GetMeResponse"
                        }
                    }
                }
            }
        },
        "/auth/api/v1/user": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Updates User.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creates User.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/api/v1/user/{userId}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns user details by specified user id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.GetUserResponse"
                        }
                    }
                }
            }
        },
        "/auth/api/v1/users": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieves a list of users who are members of the workspace.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List Users",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.GetUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.GetUsersResponse"
                            }
                        }
                    }
                }
            }
        },
        "/auth/api/v3/user/password/check": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete User.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Delete User",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/api/v3/user/password/reset": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Reset current user password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Reset current user password",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/api/v3/user/{email_address}/delete": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete User.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request Body",
                        "name": "email_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/compliance/api/v1/ai/control/{controlID}/remediation": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get control remediation using AI",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ControlID",
                        "name": "controlID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkRemediation"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/assignments/benchmark/{benchmark_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all benchmark assigned sources with benchmark id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Get benchmark assigned sources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkAssignedEntities"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/assignments/connection/{connection_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all benchmark assigned to a connection with connection id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Get list of benchmark assignments for a connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection ID",
                        "name": "connection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.AssignedBenchmark"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/assignments/resource_collection/{resource_collection_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all benchmark assigned to a resource collection with resource collection id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Get list of benchmark assignments for a resource collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource collection ID",
                        "name": "resource_collection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.AssignedBenchmark"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/assignments/{benchmark_id}/connection": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a benchmark assignment for a connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Create benchmark assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Auto enable benchmark for connections",
                        "name": "auto_assign",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection ID or 'all' for everything",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection",
                        "name": "resourceCollection",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkAssignment"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete benchmark assignment with source id and benchmark id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Delete benchmark assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection ID or 'all' for everything",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection Group ",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource Collection",
                        "name": "resourceCollection",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/summary": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a summary of all benchmarks and their associated checks and results within a specified time interval.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List benchmarks summaries",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs to filter by",
                        "name": "resourceCollection",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Key-Value tags in key=value format to filter by",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for values in epoch seconds",
                        "name": "timeAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 3,
                        "description": "Top account count",
                        "name": "topAccountCount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListBenchmarksSummaryResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/{benchmark_id}/controls": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark controls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for values in epoch seconds",
                        "name": "timeAt",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Key-Value tags in key=value format to filter by",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlSummary"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/{benchmark_id}/controls/{controlId}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark controls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Control ID",
                        "name": "controlId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlSummary"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/{benchmark_id}/settings": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Changes benchmark settings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "change benchmark settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FrameworkIds",
                        "name": "benchmark_id",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "tracksDriftEvents",
                        "name": "tracksDriftEvents",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/{benchmark_id}/summary": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a summary of a benchmark and its associated checks and results.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs to filter by",
                        "name": "resourceCollection",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for values in epoch seconds",
                        "name": "timeAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 3,
                        "description": "Top account count",
                        "name": "topAccountCount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkEvaluationSummary"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/{benchmark_id}/trend": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a trend of a benchmark result and checks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark trend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs to filter by",
                        "name": "resourceCollection",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for start of the chart in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end of the chart in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTrendDatapoint"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all compliance run compliacne results with respect to filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get compliacne results",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/count": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all compliance run complianceResult count with respect to filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get complianceResult count",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "failed",
                                "passed"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "ComplianceStatus to filter by defaults to all complianceStatus except passed",
                        "name": "complianceStatus",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        },
                        "collectionFormat": "csv",
                        "description": "StateActive to filter by defaults to true",
                        "name": "stateActive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.CountComplianceResultsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/events/{id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all compliance run finding events with respect to filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get finding events by finding ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComplianceResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultDriftEventsByComplianceResultIDResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/filters": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving possible values for finding filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get possible values for finding filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFilters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFiltersWithMetadata"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/kpi": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving KPIs for complianceResults.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get finding KPIs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultKPIResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/resource": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a single finding",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get finding",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetSingleResourceFindingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetSingleResourceFindingResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/single/{id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a single finding by finding ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get single finding by finding ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComplianceResult ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResult"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/top/{field}/{count}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving the top field by finding count.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get top field by finding count",
                "parameters": [
                    {
                        "enum": [
                            "resourceType",
                            "integrationID",
                            "resourceID",
                            "service",
                            "controlID"
                        ],
                        "type": "string",
                        "description": "Field",
                        "name": "field",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Count",
                        "name": "count",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by (inclusive)",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by (exclusive)",
                        "name": "notIntegrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "FrameworkIds",
                        "name": "benchmarkId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "ControlID",
                        "name": "controlId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "none",
                                "low",
                                "medium",
                                "high",
                                "critical"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Severities to filter by defaults to all severities except passed",
                        "name": "severities",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "failed",
                                "passed"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "ComplianceStatus to filter by defaults to all complianceStatus except passed",
                        "name": "complianceStatus",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        },
                        "collectionFormat": "csv",
                        "description": "StateActive to filter by defaults to true",
                        "name": "stateActive",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Job ID to filter",
                        "name": "jobId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Start time to filter by",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End time to filter by",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time interval to filter by",
                        "name": "interval",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetTopFieldResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/{benchmarkId}/accounts": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of accounts with their security score and severities complianceResults count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get accounts complianceResults summaries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FrameworkIds",
                        "name": "benchmarkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetAccountsComplianceResultsSummaryResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/{benchmarkId}/services": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of services with their security score and severities complianceResults count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get services complianceResults summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FrameworkIds",
                        "name": "benchmarkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetServicesComplianceResultsSummaryResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result/{benchmarkId}/{field}/count": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving the number of complianceResults field count by controls.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get complianceResults field count by controls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FrameworkIds",
                        "name": "benchmarkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "resourceType",
                            "integrationID",
                            "resourceID",
                            "service"
                        ],
                        "type": "string",
                        "description": "Field",
                        "name": "field",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs to filter by",
                        "name": "resourceCollection",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "none",
                                "low",
                                "medium",
                                "high",
                                "critical"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Severities to filter by defaults to all severities except passed",
                        "name": "severities",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "failed",
                                "passed"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "ComplianceStatus to filter by defaults to failed",
                        "name": "complianceStatus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetTopFieldResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result_events": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all compliance finding events with respect to filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get finding events",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultDriftEventsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultDriftEventsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result_events/count": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all compliance run finding events count with respect to filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get finding events count",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "failed",
                                "passed"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "ComplianceStatus to filter by defaults to all complianceStatus except passed",
                        "name": "complianceStatus",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "FrameworkIds to filter by",
                        "name": "benchmarkID",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        },
                        "collectionFormat": "csv",
                        "description": "StateActive to filter by defaults to all stateActives",
                        "name": "stateActive",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Start time to filter by",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End time to filter by",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.CountComplianceResultDriftEventsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result_events/filters": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving possible values for finding event filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get possible values for finding event filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEventFilters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEventFiltersWithMetadata"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/compliance_result_events/single/{id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving single finding event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get single finding event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ComplianceResultID",
                        "name": "findingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEvent"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/controls/summary": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List controls summaries",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Control IDs to filter by",
                        "name": "controlId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Key-Value tags in key=value format to filter by",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlSummary"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/controls/{controlId}/summary": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get control summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Control ID",
                        "name": "controlId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlSummary"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/controls/{controlId}/trend": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get control trend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Control ID",
                        "name": "controlId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by",
                        "name": "integrationId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection groups to filter by ",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for start of the chart in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end of the chart in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "daily",
                            "monthly"
                        ],
                        "type": "string",
                        "default": "daily",
                        "description": "granularity of the chart",
                        "name": "granularity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlTrendDatapoint"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/metadata/tag/compliance": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a list of compliance tag keys with their possible values.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List compliance tag keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/queries/sync": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs queries with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Sync queries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git URL",
                        "name": "configzGitURL",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/compliance/api/v1/resource_findings": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of resource findings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List resource findings",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListResourceFindingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListResourceFindingsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/benchmark/{benchmark-id}/assignments": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get Benchmark Assignments by FrameworkIds",
                "parameters": [
                    {
                        "type": "string",
                        "description": "assignment type. options: implicit, explicit, any",
                        "name": "assignment_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include potentials",
                        "name": "include_potential",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationInfo"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/benchmark/{benchmark_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get Benchmark Details by FrameworkIds",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "benchmark id to get the details for",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/benchmark/{benchmark_id}/assign": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a benchmark assignment for an integration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Create benchmark assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID to assign",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Integrations details to be assigned",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/compliance/api/v3/benchmarks": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List benchmarks filtered by integrations and other filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListResponse"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/benchmarks/filters": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List possible values for each filter in List Benchmarks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListBenchmarksFiltersResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/benchmarks/tags": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of benchmark possible tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List benchmarks tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTagsResult"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/benchmarks/{benchmark_id}/nested": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List benchmarks filtered by integrations and other filters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListResponse"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/benchmarks/{benchmark_id}/trend": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a trend of a benchmark result and checks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark trend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "timestamp for end of the chart in epoch seconds",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkTrendV3Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkTrendV3Response"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/categories/controls": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get list of controls for given categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get list of controls for given categories",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Categories filter by",
                        "name": "categories",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetCategoriesControlsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/categories/queries": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get list of controls for given categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "Get list of controls for given categories",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "categories",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/compliance/summary/benchmark": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a summary of a benchmark and its associated checks and results.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark summary",
                "parameters": [
                    {
                        "description": "Integrations filter to get the benchmark summary",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfBenchmarkRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Benchmark ID to get the summary",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfBenchmarkResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/compliance/summary/integration": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a summary of a benchmark and its associated checks and results.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark summary",
                "parameters": [
                    {
                        "description": "Integrations filter to get the benchmark summary",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfIntegrationRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Benchmark ID to get the summary",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfIntegrationResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/compliance/summary/{job_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a summary of a benchmark and its associated checks and results by given job ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark summary for a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID to get the summary",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Show top integrations (5 by default)",
                        "name": "show_top",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfBenchmarkResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/compliance_result": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving all compliance run complianceResults with respect to filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get complianceResults",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultsRequestV2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/control/{control_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get Control Details by control ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Control ID",
                        "name": "control_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetControlDetailsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/controls": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List controls filtered by connector, benchmark, tags",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListControlsFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListControlsFilterResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/controls/categories": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get list of unique resource categories for the give controls",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get list of unique resource categories",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Controls filter by",
                        "name": "controls",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Benchmark filter by",
                        "name": "benchmarks",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.GetResourceCategoriesResponse"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/controls/filters": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List possible values for each filter in List Controls",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListControlsFiltersResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/controls/summary": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List controls filtered by connector, benchmark, tags",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlsFilterSummaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlsFilterSummaryResult"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/controls/tags": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of control possible tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List controls tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlTagsResult"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/jobs/history": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "List jobs by job type and filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Time Interval to filter by",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Trigger Type: (all(default), manual, system)",
                        "name": "trigger_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Created By User ID",
                        "name": "created_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "cursor",
                        "name": "cursor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "per page",
                        "name": "per_page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListComplianceJobsHistoryResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/parameters/controls": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get list of queries for given parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get list of queries for given parameters",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Parameters filter by",
                        "name": "parameters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.GetParametersQueriesResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v3/sample/purge": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns all workspaces with owner id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "List all workspaces with owner id",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "ignore_source_ids",
                        "name": "ignore_source_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/integration/api/v1/credentials": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List credentials",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "List credentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.ListCredentialsResponse"
                        }
                    }
                }
            }
        },
        "/integration/api/v1/credentials/list": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List credentials with given filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "List credentials with given filters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.ListIntegrationsResponse"
                        }
                    }
                }
            }
        },
        "/integration/api/v1/credentials/{credentialId}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "Get credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "credentialId",
                        "name": "credentialId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List credentials",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "List credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "credentialId",
                        "name": "credentialId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.UpdateCredentialRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.ListCredentialsResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "Delete credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "credentialId",
                        "name": "credentialId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/integration/api/v1/integrations": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List integrations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "List integrations",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "integration type filter",
                        "name": "integration_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.ListIntegrationsResponse"
                        }
                    }
                }
            }
        },
        "/integration/api/v1/integrations/add": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Add integrations by given credential ID and integration IDs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "integrations"
                ],
                "summary": "Add integrations",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.AddIntegrationsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/integration/api/v1/integrations/discover": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Discover integrations and return back the list of integrations and credential ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "integrations"
                ],
                "summary": "Discover integrations",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.DiscoverIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/integration/api/v1/integrations/integration-groups": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List integration groups and their integrations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "List integration groups and their integrations",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Populate connections",
                        "name": "populateIntegrations",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.IntegrationGroup"
                            }
                        }
                    }
                }
            }
        },
        "/integration/api/v1/integrations/integration-groups/{integrationGroupName}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get integration group and the integrations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "Get integration group and the integrations",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Populate connections",
                        "name": "populateIntegrations",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "integrationGroupName",
                        "name": "integrationGroupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.IntegrationGroup"
                        }
                    }
                }
            }
        },
        "/integration/api/v1/integrations/types": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List integration types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "List integration types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PerPage",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Enabled",
                        "name": "enabled",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.ListIntegrationTypesResponse"
                        }
                    }
                }
            }
        },
        "/integration/api/v1/integrations/types/{integrationTypeId}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get integration type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "Get integration type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "integrationTypeId",
                        "name": "integrationTypeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "Delete credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "integrationTypeId",
                        "name": "integrationTypeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/integration/api/v1/integrations/{IntegrationID}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "Get credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IntegrationID",
                        "name": "IntegrationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "Delete credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IntegrationID",
                        "name": "IntegrationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/integration/api/v1/integrations/{IntegrationID}/healthcheck": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Add integrations by given credential ID and integration IDs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "integrations"
                ],
                "summary": "Add integrations",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/integration/api/v1/integrations/{integrationId}": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "credentials"
                ],
                "summary": "Get credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IntegrationID",
                        "name": "integrationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/inventory/api/v1/query": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of named queries by specified filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "List named queries",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ListQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryItem"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query/run": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Run provided named query and returns the result.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "Run query",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.RunQueryRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.RunQueryResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query/run/history": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List queries which have been run recently",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "List recently ran queries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryHistory"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/categories": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of categories for analytics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "List Analytics categories",
                "parameters": [
                    {
                        "enum": [
                            "assets",
                            "spend"
                        ],
                        "type": "string",
                        "description": "Metric type, default: assets",
                        "name": "metricType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "For assets minimum number of resources returned resourcetype must have, default 1",
                        "name": "minCount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.AnalyticsCategoriesResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/composition/{key}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving tag values with the most resources for the given key.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "List analytics composition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "assets",
                            "spend"
                        ],
                        "type": "string",
                        "description": "Metric type, default: assets",
                        "name": "metricType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "How many top values to return default is 5",
                        "name": "top",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector types to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by - mutually exclusive with connectionGroup",
                        "name": "connectionId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs to filter by",
                        "name": "resourceCollection",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for resource count in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for resource count change comparison in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ListResourceTypeCompositionResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/count": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving the count of resources and connections with respect to specified filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Count analytics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.CountAnalyticsMetricsResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/metric": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of analytics with metrics of each type based on the given input filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "List analytics metrics",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Key-Value tags in key=value format to filter by",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "assets",
                            "spend"
                        ],
                        "type": "string",
                        "description": "Metric type, default: assets",
                        "name": "metricType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Integration Type to filter by",
                        "name": "integrationType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by - mutually exclusive with connectionGroup",
                        "name": "connectionId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs to filter by",
                        "name": "resourceCollection",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Metric IDs",
                        "name": "metricIDs",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for resource count in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for resource count change comparison in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum number of resources with this tag value, default 0",
                        "name": "minCount",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "count",
                            "growth",
                            "growth_rate"
                        ],
                        "type": "string",
                        "description": "Sort by field - default is count",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size - default is 20",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number - default is 1",
                        "name": "pageNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ListMetricsResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/metrics/list": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns list of metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "List metrics",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "assets",
                            "spend"
                        ],
                        "type": "string",
                        "description": "Metric type, default: assets",
                        "name": "metricType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.AnalyticsMetric"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/metrics/{metric_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns list of metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "List metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MetricID",
                        "name": "metric_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.AnalyticsMetric"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/spend/composition": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving the cost composition with respect to specified filters. Retrieving information such as the total cost for the given time range, and the top services by cost.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "List cost composition",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by - mutually exclusive with connectionGroup",
                        "name": "connectionId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "How many top values to return default is 5",
                        "name": "top",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for start in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ListCostCompositionResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/spend/count": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving the count of resources and connections with respect to specified filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Count analytics spend",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.CountAnalyticsSpendResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/spend/metric": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving cost metrics with respect to specified filters. The API returns information such as the total cost and costs per each service based on the specified filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "List spend metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter costs",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by - mutually exclusive with connectionGroup",
                        "name": "connectionId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for start in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "dimension",
                            "cost",
                            "growth",
                            "growth_rate"
                        ],
                        "type": "string",
                        "description": "Sort by field - default is cost",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size - default is 20",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number - default is 1",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Metric IDs",
                        "name": "metricIDs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ListCostMetricsResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/spend/table": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns spend table with respect to the dimension and granularity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get Spend Trend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "timestamp for start in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "monthly",
                            "daily",
                            "yearly"
                        ],
                        "type": "string",
                        "description": "Granularity of the table, default is daily",
                        "name": "granularity",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "connection",
                            "metric"
                        ],
                        "type": "string",
                        "description": "Dimension of the table, default is metric",
                        "name": "dimension",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by - mutually exclusive with connectionGroup",
                        "name": "connectionId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Metrics IDs",
                        "name": "metricIds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.SpendTableRow"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/spend/trend": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a list of costs over the course of the specified time frame based on the given input filters. If startTime and endTime are empty, the API returns the last month trend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get Cost Trend",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by - mutually exclusive with connectionGroup",
                        "name": "connectionId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Metrics IDs",
                        "name": "metricIds",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for start in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "monthly",
                            "daily",
                            "yearly"
                        ],
                        "type": "string",
                        "description": "Granularity of the table, default is daily",
                        "name": "granularity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.CostTrendDatapoint"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/table": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns asset table with respect to the dimension and granularity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get Assets Table",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "timestamp for start in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "monthly",
                            "daily",
                            "yearly"
                        ],
                        "type": "string",
                        "description": "Granularity of the table, default is daily",
                        "name": "granularity",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "connection",
                            "metric"
                        ],
                        "type": "string",
                        "description": "Dimension of the table, default is metric",
                        "name": "dimension",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.AssetTableRow"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/tag": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a list of tag keys with their possible values for all analytic metrics.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "List analytics tags",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Integration type to filter by",
                        "name": "integrationType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by - mutually exclusive with connectionGroup",
                        "name": "connectionId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs to filter by",
                        "name": "resourceCollection",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum number of resources/spend with this tag value, default 1",
                        "name": "minCount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Start time in unix timestamp format, default now - 1 month",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End time in unix timestamp format, default now",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "assets",
                            "spend"
                        ],
                        "type": "string",
                        "description": "Metric type, default: assets",
                        "name": "metricType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/analytics/trend": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving a list of resource counts over the course of the specified time frame based on the given input filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get metric trend",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Key-Value tags in key=value format to filter by",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "assets",
                            "spend"
                        ],
                        "type": "string",
                        "description": "Metric type, default: assets",
                        "name": "metricType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Metric IDs to filter by",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "AWS",
                                "Azure"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connector type to filter by",
                        "name": "connector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs to filter by - mutually exclusive with connectionGroup",
                        "name": "connectionId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "connectionGroup",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs to filter by",
                        "name": "resourceCollection",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for start in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "monthly",
                            "daily",
                            "yearly"
                        ],
                        "type": "string",
                        "description": "Granularity of the table, default is daily",
                        "name": "granularity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceTypeTrendDatapoint"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/metadata/resource-collection": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of resource collections by specified filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource_collection"
                ],
                "summary": "List resource collections",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "active",
                                "inactive"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollection"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/metadata/resource-collection/{resourceCollectionId}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving resource collection by specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource_collection"
                ],
                "summary": "Get resource collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource collection ID",
                        "name": "resourceCollectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollection"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/resource-collection": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of resource collections by specified filters with inventory data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource_collection"
                ],
                "summary": "List resource collections with inventory data",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection IDs",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "",
                                "active",
                                "inactive"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource collection status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollection"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/resource-collection/{resourceCollectionId}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving resource collection by specified ID with inventory data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource_collection"
                ],
                "summary": "Get resource collection with inventory data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource collection ID",
                        "name": "resourceCollectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollection"
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/resource-collection/{resourceCollectionId}/landscape": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving resource collection landscape by specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource_collection"
                ],
                "summary": "Get resource collection landscape",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource collection ID",
                        "name": "resourceCollectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionLandscape"
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/queries": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of named queries by specified filters and tags filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "List named queries",
                "parameters": [
                    {
                        "description": "List Queries Filters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ListQueryV2Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ListQueriesV2Response"
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/queries/categories": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get list of unique resource categories for the give queries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "Get list of unique resource categories",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "queries",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.GetResourceCategoriesResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/queries/filters": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "List possible values for each filter in List Controls",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ListQueriesFiltersResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/query/async/run/:run_id/result": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Run async query run result by run id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "Run async query run result by run id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Run ID to get the result for",
                        "name": "run_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.GetAsyncQueryRunResultResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/query/run": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Run provided named query or compliance and returns the result.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "Run query by named query or compliance ID",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.RunQueryByIDRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.RunQueryResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/query/tags": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of named queries by specified filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "List named queries tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryTagsResult"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/query/{query_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieving list of named queries by specified filters and tags filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "Get named query by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QueryID",
                        "name": "query_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryItemV2"
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/resources/categories": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get list of unique resource categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "Get list of unique resource categories",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Tables filter",
                        "name": "tables",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Categories filter",
                        "name": "categories",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.GetResourceCategoriesResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v3/tables/categories": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get list of unique resource categories for the give queries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "named_query"
                ],
                "summary": "Get list of unique resource categories",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection group to filter by - mutually exclusive with connectionId",
                        "name": "tables",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.CategoriesTables"
                            }
                        }
                    }
                }
            }
        },
        "/metadata/api/v1/filter": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "list filters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_models.Filter"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "add filter",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_models.Filter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/metadata/api/v1/metadata": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Sets the config metadata for the given key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Set key metadata",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.SetConfigMetadataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/metadata/api/v1/metadata/{key}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns the config metadata for the given key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Get key metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_models.ConfigMetadata"
                        }
                    }
                }
            }
        },
        "/metadata/api/v1/query_parameter": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns the list of query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "List query parameters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.ListQueryParametersResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Sets the query parameters from the request body",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Set query parameter",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.SetQueryParameterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/metadata/api/v3/views/checkpoint": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns the views checkpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get views checkpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.GetViewsCheckpointResponse"
                        }
                    }
                }
            }
        },
        "/metadata/api/v3/views/reload": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Reloads the views",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Reload views",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/analytics/trigger": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers an analytics job to run immediately",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "TriggerAnalyticsJob",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/compliance/re-evaluate/{benchmark_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get re-evaluate job for the given connection and control",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Get re-evaluates compliance job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection ID",
                        "name": "connection_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Control ID",
                        "name": "control_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.JobSeqCheckResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers a discovery job to run immediately for the given connection then triggers compliance job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Re-evaluates compliance job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection ID",
                        "name": "connection_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Control ID",
                        "name": "control_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/compliance/trigger": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers a compliance job to run immediately for the given benchmark",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Triggers compliance job",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Benchmark IDs leave empty for everything",
                        "name": "benchmark_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection IDs leave empty for default (enabled connections)",
                        "name": "connection_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/compliance/trigger/{benchmark_id}": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers a compliance job to run immediately for the given benchmark",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Triggers compliance job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Connection ID",
                        "name": "connection_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/compliance/trigger/{benchmark_id}/summary": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers a compliance job to run immediately for the given benchmark",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Triggers compliance job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID use 'all' for everything",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/describe/connection/status": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Get connection describe status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection ID",
                        "name": "connection_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/describe/trigger/{connection_id}": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers a describe job to run immediately for the given connection",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Triggers describer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection ID",
                        "name": "connection_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force full discovery",
                        "name": "force_full",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Resource Type",
                        "name": "resource_type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Cost discovery",
                        "name": "cost_discovery",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/jobs": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Lists all jobs",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListJobsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListJobsResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/benchmark/:benchmark_id/run-history": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get compliance jobs history for give connection",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.BenchmarkAuditHistoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Benchmark ID to get the run history for",
                        "name": "benchmark_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.BenchmarkAuditHistoryResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/benchmark/run-history/integrations": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get compliance jobs history for give connection possible integrations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/compliance/benchmark/{benchmark_id}/run": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers a compliance job to run immediately for the given benchmark",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Triggers compliance job by benchmark id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Integrations filter",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkByIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/compliance/run": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers a compliance job to run immediately for the given benchmark",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Triggers compliance job",
                "parameters": [
                    {
                        "description": "Requst Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/discovery/run": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Triggers a discovery job to run immediately for the given resource types and Integrations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "describe"
                ],
                "summary": "Run Discovery job",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunDiscoveryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunDiscoveryResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/discovery/status": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get Integration discovery progress (number of jobs in different states)",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetIntegrationDiscoveryProgressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetIntegrationDiscoveryProgressResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/integration/discovery/last-job": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get Last dicovery job for integration",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetIntegrationLastDiscoveryJobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v3/job/analytics/{job_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get analytics job status by job id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetAnalyticsJobStatusResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/job/compliance/{job_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get compliance job status by job id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobStatusResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/job/query/{job_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get async query run job status by job id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetAsyncQueryRunJobStatusResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "List jobs by job type and filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListJobsByTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListJobsByTypeResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/analytics": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get analytics jobs history for give connection",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "List of job statuses to filter",
                        "name": "job_status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "List of types to filter",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "cursor",
                        "name": "cursor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "per page",
                        "name": "per_page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for start of the chart in epoch seconds",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp for end of the chart in epoch seconds",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetAnalyticsJobsHistoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/cancel": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Cancel job by given job type and job ID",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.CancelJobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.CancelJobResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/cancel/byid": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Cancel job by given job type and job ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID to Cancel",
                        "name": "job_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job Type",
                        "name": "job_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/compliance": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get compliance jobs history for give connection",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListComplianceJobsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobsHistoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/compliance/connections": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get compliance jobs history for give connection",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobsHistoryByIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobsHistoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/compliance/connections/{connection_id}": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get compliance jobs history for give connection",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobsHistoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Connection ID",
                        "name": "connection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobsHistoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/compliance/summary/jobs": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "List jobs by job type and filters",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Compliance Job ID",
                        "name": "job_ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/discovery": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get describe jobs history for give connection",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListDescribeJobsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobsHistoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/discovery/connections": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get describe jobs history for give connection",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobsHistoryByIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobsHistoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/discovery/connections/{connection_id}": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get describe jobs history for give connection",
                "parameters": [
                    {
                        "description": "List jobs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobsHistoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Connection ID",
                        "name": "connection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobsHistoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/discovery/{job_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "Get describe job status by job id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobStatusResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/history/compliance": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "List jobs by job type and filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Time Interval to filter by",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Trigger Type: (all(default), manual, system)",
                        "name": "trigger_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Created By User ID",
                        "name": "created_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Created By User ID",
                        "name": "benchmark_ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "cursor",
                        "name": "cursor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "per page",
                        "name": "per_page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListComplianceJobsHistoryResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/jobs/interval": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "List jobs by job type and filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Type",
                        "name": "job_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time Interval to filter by",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Trigger Type: (all(default), manual, system)",
                        "name": "trigger_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Created By User ID",
                        "name": "created_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "cursor",
                        "name": "cursor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "per page",
                        "name": "per_page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListJobsByTypeItem"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/query/{query_id}/run": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduler"
                ],
                "summary": "List jobs by job type and filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Policy ID",
                        "name": "query_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunQueryResponse"
                        }
                    }
                }
            }
        },
        "/schedule/api/v3/sample/purge": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns all workspaces with owner id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "List all workspaces with owner id",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/wastage/api/v1/wastage/aws-rds": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List wastage in AWS RDS",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wastage"
                ],
                "summary": "List wastage in AWS RDS",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsWastageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsWastageResponse"
                        }
                    }
                }
            }
        },
        "/wastage/api/v1/wastage/aws-rds-cluster": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List wastage in AWS RDS Cluster",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wastage"
                ],
                "summary": "List wastage in AWS RDS Cluster",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsClusterWastageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsClusterWastageResponse"
                        }
                    }
                }
            }
        },
        "/wastage/api/v1/wastage/ec2-instance": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List wastage in EC2 Instances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wastage"
                ],
                "summary": "List wastage in EC2 Instances",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.EC2InstanceWastageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.EC2InstanceWastageResponse"
                        }
                    }
                }
            }
        },
        "/workspace/api/v3/configured/set": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Sync demo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demo Data S3 URL",
                        "name": "demo_data_s3_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/api/v3/configured/status": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Sync demo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demo Data S3 URL",
                        "name": "demo_data_s3_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get About info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.About"
                        }
                    }
                }
            }
        },
        "/workspace/api/v3/configured/unset": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Sync demo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demo Data S3 URL",
                        "name": "demo_data_s3_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/api/v3/migration/status": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Sync demo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demo Data S3 URL",
                        "name": "demo_data_s3_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.GetMigrationStatusResponse"
                        }
                    }
                }
            }
        },
        "/workspace/api/v3/sample/loaded": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Sync demo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demo Data S3 URL",
                        "name": "demo_data_s3_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/api/v3/sample/purge": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns all workspaces with owner id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "List all workspaces with owner id",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/api/v3/sample/sync": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Sync demo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demo Data S3 URL",
                        "name": "demo_data_s3_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/api/v3/sample/sync/status": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Sync demo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demo Data S3 URL",
                        "name": "demo_data_s3_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.GetSampleSyncStatusResponse"
                        }
                    }
                }
            }
        },
        "/workspace/api/v3/vault/configured": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Syncs demo with the git backend.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get About info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.About"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Role": {
            "type": "string",
            "enum": [
                "admin",
                "editor",
                "viewer"
            ],
            "x-enum-varnames": [
                "AdminRole",
                "EditorRole",
                "ViewerRole"
            ]
        },
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "es.Resource": {
            "type": "object",
            "properties": {
                "canonical_tags": {
                    "description": "CanonicalTags is the list of tags associated with the resource",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/es.Tag"
                    }
                },
                "described_at": {
                    "description": "DescribedAt is when the DescribeSourceJob is created",
                    "type": "integer"
                },
                "described_by": {
                    "description": "DescribedBy is the resource describe job id",
                    "type": "string"
                },
                "description": {
                    "description": "Description is the description of the resource based on the describe call."
                },
                "es_id": {
                    "type": "string"
                },
                "es_index": {
                    "type": "string"
                },
                "integration_id": {
                    "description": "IntegrationID is the integration ID that the resource belongs to",
                    "type": "string"
                },
                "integration_type": {
                    "description": "IntegrationType is the type of the integration source of the resource, i.e. AWS Cloud, Azure Cloud.",
                    "type": "string"
                },
                "metadata": {
                    "description": "Metadata is arbitrary data associated with each resource",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "platform_id": {
                    "description": "PlatformID is the unique Global ID of the resource inside the platform",
                    "type": "string"
                },
                "resource_id": {
                    "description": "ResourceID is the unique ID of the resource in the integration.",
                    "type": "string"
                },
                "resource_name": {
                    "description": "ResourceName is the name of the resource.",
                    "type": "string"
                },
                "resource_type": {
                    "description": "ResourceType is the type of the resource.",
                    "type": "string"
                }
            }
        },
        "es.Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_analytics_api.JobStatus": {
            "type": "string",
            "enum": [
                "CREATED",
                "IN_PROGRESS",
                "COMPLETED_WITH_FAILURE",
                "COMPLETED",
                "CANCELED"
            ],
            "x-enum-varnames": [
                "JobCreated",
                "JobInProgress",
                "JobCompletedWithFailure",
                "JobCompleted",
                "JobCanceled"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_analytics_db.MetricType": {
            "type": "string",
            "enum": [
                "assets",
                "spend"
            ],
            "x-enum-varnames": [
                "MetricTypeAssets",
                "MetricTypeSpend"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.APIKeyResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "Activity state of the key",
                    "type": "boolean",
                    "example": true
                },
                "created_at": {
                    "description": "Creation timestamp in UTC",
                    "type": "string",
                    "example": "2023-03-31T09:36:09.855Z"
                },
                "creator_user_id": {
                    "description": "Unique identifier of the user who created the key",
                    "type": "string",
                    "example": "auth|123456789"
                },
                "id": {
                    "description": "Unique identifier for the key",
                    "type": "integer",
                    "example": 1
                },
                "maskedKey": {
                    "description": "Masked key",
                    "type": "string",
                    "example": "abc...de"
                },
                "name": {
                    "description": "Name of the key",
                    "type": "string",
                    "example": "example"
                },
                "role_name": {
                    "description": "Name of the role",
                    "enum": [
                        "admin",
                        "editor",
                        "viewer"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Role"
                        }
                    ],
                    "example": "admin"
                },
                "updated_at": {
                    "description": "Last update timestamp in UTC",
                    "type": "string",
                    "example": "2023-04-21T08:53:09.928Z"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.CreateAPIKeyRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the key",
                    "type": "string"
                },
                "role": {
                    "description": "Name of the role",
                    "enum": [
                        "admin",
                        "editor",
                        "viewer"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Role"
                        }
                    ],
                    "example": "admin"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.CreateAPIKeyResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "Activity state of the key",
                    "type": "boolean",
                    "example": true
                },
                "created_at": {
                    "description": "Creation timestamp in UTC",
                    "type": "string",
                    "example": "2023-03-31T09:36:09.855Z"
                },
                "id": {
                    "description": "Unique identifier for the key",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Name of the key",
                    "type": "string",
                    "example": "example"
                },
                "roleName": {
                    "description": "Name of the role",
                    "enum": [
                        "admin",
                        "editor",
                        "viewer"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Role"
                        }
                    ],
                    "example": "admin"
                },
                "token": {
                    "description": "Token of the key",
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.CreateUserRequest": {
            "type": "object",
            "properties": {
                "connector_id": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "enum": [
                        "admin",
                        "editor",
                        "viewer"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Role"
                        }
                    ],
                    "example": "admin"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.GetMeResponse": {
            "type": "object",
            "properties": {
                "blocked": {
                    "description": "Is the user blocked or not",
                    "type": "boolean",
                    "example": false
                },
                "color_blind_mode": {
                    "type": "boolean"
                },
                "connector_id": {
                    "type": "string"
                },
                "created_at": {
                    "description": "Creation timestamp in UTC",
                    "type": "string",
                    "example": "2023-03-31T09:36:09.855Z"
                },
                "email": {
                    "description": "Email address of the user",
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "email_verified": {
                    "description": "Is email verified or not",
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "description": "Unique identifier for the user",
                    "type": "integer",
                    "example": 123456789
                },
                "lastLogin": {
                    "type": "string"
                },
                "last_activity": {
                    "description": "Last activity timestamp in UTC",
                    "type": "string",
                    "example": "2023-04-21T08:53:09.928Z"
                },
                "memberSince": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.GetUserResponse": {
            "type": "object",
            "properties": {
                "blocked": {
                    "description": "Is the user blocked or not",
                    "type": "boolean",
                    "example": false
                },
                "createdAt": {
                    "description": "Creation timestamp in UTC",
                    "type": "string",
                    "example": "2023-03-31T09:36:09.855Z"
                },
                "email": {
                    "description": "Email address of the user",
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "email_verified": {
                    "description": "Is email verified or not",
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "description": "Unique identifier for the user",
                    "type": "integer",
                    "example": 1
                },
                "last_activity": {
                    "description": "Last activity timestamp in UTC",
                    "type": "string",
                    "example": "2023-04-21T08:53:09.928Z"
                },
                "role_name": {
                    "description": "Name of the role",
                    "enum": [
                        "admin",
                        "editor",
                        "viewer"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Role"
                        }
                    ],
                    "example": "admin"
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.GetUsersRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "emailVerified": {
                    "description": "Filter by",
                    "type": "boolean",
                    "example": true
                },
                "roleName": {
                    "description": "Filter by role name",
                    "enum": [
                        "admin",
                        "editor",
                        "viewer"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Role"
                        }
                    ],
                    "example": "admin"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.GetUsersResponse": {
            "type": "object",
            "properties": {
                "connector_id": {
                    "type": "string"
                },
                "created_at": {
                    "description": "Creation timestamp in UTC",
                    "type": "string",
                    "example": "2023-03-31T09:36:09.855Z"
                },
                "email": {
                    "description": "Email address of the user",
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "email_verified": {
                    "description": "Is email verified or not",
                    "type": "boolean",
                    "example": true
                },
                "external_id": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the user",
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_activity": {
                    "description": "Last activity timestamp in UTC",
                    "type": "string",
                    "example": "2023-04-21T08:53:09.928Z"
                },
                "role_name": {
                    "description": "Name of the role",
                    "enum": [
                        "admin",
                        "editor",
                        "viewer"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Role"
                        }
                    ],
                    "example": "admin"
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_auth_api.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "connector_id": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "enum": [
                        "admin",
                        "editor",
                        "viewer"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Role"
                        }
                    ],
                    "example": "admin"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.AccountsComplianceResultsSummary": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "accountName": {
                    "type": "string"
                },
                "complianceStatusesCount": {
                    "type": "object",
                    "properties": {
                        "error": {
                            "type": "integer"
                        },
                        "failed": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "integer"
                        },
                        "passed": {
                            "type": "integer"
                        },
                        "skip": {
                            "type": "integer"
                        }
                    }
                },
                "lastCheckTime": {
                    "type": "string"
                },
                "securityScore": {
                    "type": "number"
                },
                "severitiesCount": {
                    "type": "object",
                    "properties": {
                        "critical": {
                            "type": "integer"
                        },
                        "high": {
                            "type": "integer"
                        },
                        "low": {
                            "type": "integer"
                        },
                        "medium": {
                            "type": "integer"
                        },
                        "none": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.AssignedBenchmark": {
            "type": "object",
            "properties": {
                "benchmarkId": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.Benchmark"
                },
                "status": {
                    "description": "Status",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.Benchmark": {
            "type": "object",
            "properties": {
                "autoAssign": {
                    "description": "Whether the benchmark is auto assigned or not",
                    "type": "boolean",
                    "example": true
                },
                "category": {
                    "description": "Benchmark category",
                    "type": "string"
                },
                "children": {
                    "description": "Benchmark children",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controls": {
                    "description": "Benchmark controls",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "description": "Benchmark creation date",
                    "type": "string"
                },
                "description": {
                    "description": "Benchmark description",
                    "type": "string",
                    "example": "The CIS Microsoft Azure Foundations Security Benchmark provides prescriptive guidance for establishing a secure baseline configuration for Microsoft Azure."
                },
                "documentURI": {
                    "description": "Benchmark document URI",
                    "type": "string",
                    "example": "benchmarks/azure_cis_v140.md"
                },
                "id": {
                    "description": "Benchmark ID",
                    "type": "string",
                    "example": "azure_cis_v140"
                },
                "integrationTypes": {
                    "description": "Benchmark connectors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logoURI": {
                    "description": "Benchmark logo URI",
                    "type": "string"
                },
                "referenceCode": {
                    "description": "Benchmark display code",
                    "type": "string",
                    "example": "CIS 1.4.0"
                },
                "tags": {
                    "description": "Benchmark tags",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "description": "Benchmark title",
                    "type": "string",
                    "example": "Azure CIS v1.4.0"
                },
                "tracksDriftEvents": {
                    "description": "Whether the benchmark tracks drift events or not",
                    "type": "boolean",
                    "example": true
                },
                "updatedAt": {
                    "description": "Benchmark last update date",
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkAssignedConnection": {
            "type": "object",
            "properties": {
                "integrationID": {
                    "description": "Connection ID",
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "integrationName": {
                    "description": "Provider Connection Name",
                    "type": "string"
                },
                "integrationType": {
                    "description": "Clout Provider",
                    "type": "string",
                    "example": "Azure"
                },
                "providerID": {
                    "description": "Provider Connection ID",
                    "type": "string",
                    "example": "1283192749"
                },
                "status": {
                    "description": "Status",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkAssignedEntities": {
            "type": "object",
            "properties": {
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkAssignedConnection"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkAssignment": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "description": "Unix timestamp",
                    "type": "string"
                },
                "benchmarkId": {
                    "description": "Benchmark ID",
                    "type": "string",
                    "example": "azure_cis_v140"
                },
                "connectionId": {
                    "description": "Connection ID",
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "resourceCollectionId": {
                    "description": "Resource Collection ID",
                    "type": "string",
                    "example": "example-rc"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlSummary": {
            "type": "object",
            "properties": {
                "benchmark": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.Benchmark"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlSummary"
                    }
                },
                "control": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlSummary"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlsSeverityStatus": {
            "type": "object",
            "properties": {
                "critical": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "high": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "low": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "medium": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "none": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "total": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlsSeverityStatusV2": {
            "type": "object",
            "properties": {
                "critical": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "high": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "low": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "medium": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "none": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "total": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkEvaluationSummary": {
            "type": "object",
            "properties": {
                "autoAssign": {
                    "description": "Whether the benchmark is auto assigned or not",
                    "type": "boolean",
                    "example": true
                },
                "category": {
                    "description": "Benchmark category",
                    "type": "string"
                },
                "checks": {
                    "$ref": "#/definitions/types.SeverityResult"
                },
                "children": {
                    "description": "Benchmark children",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "complianceStatusSummary": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatusSummary"
                },
                "connectionsStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "controls": {
                    "description": "Benchmark controls",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controlsSeverityStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlsSeverityStatus"
                },
                "costImpact": {
                    "type": "number"
                },
                "createdAt": {
                    "description": "Benchmark creation date",
                    "type": "string"
                },
                "description": {
                    "description": "Benchmark description",
                    "type": "string",
                    "example": "The CIS Microsoft Azure Foundations Security Benchmark provides prescriptive guidance for establishing a secure baseline configuration for Microsoft Azure."
                },
                "documentURI": {
                    "description": "Benchmark document URI",
                    "type": "string",
                    "example": "benchmarks/azure_cis_v140.md"
                },
                "evaluatedAt": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "id": {
                    "description": "Benchmark ID",
                    "type": "string",
                    "example": "azure_cis_v140"
                },
                "integrationTypes": {
                    "description": "Benchmark connectors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastJobStatus": {
                    "type": "string",
                    "example": "success"
                },
                "logoURI": {
                    "description": "Benchmark logo URI",
                    "type": "string"
                },
                "referenceCode": {
                    "description": "Benchmark display code",
                    "type": "string",
                    "example": "CIS 1.4.0"
                },
                "resourcesSeverityStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkResourcesSeverityStatus"
                },
                "tags": {
                    "description": "Benchmark tags",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "description": "Benchmark title",
                    "type": "string",
                    "example": "Azure CIS v1.4.0"
                },
                "topConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopFieldRecord"
                    }
                },
                "tracksDriftEvents": {
                    "description": "Whether the benchmark tracks drift events or not",
                    "type": "boolean",
                    "example": true
                },
                "updatedAt": {
                    "description": "Benchmark last update date",
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkRemediation": {
            "type": "object",
            "properties": {
                "remediation": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkResourcesSeverityStatus": {
            "type": "object",
            "properties": {
                "critical": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "high": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "low": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "medium": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "none": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                },
                "total": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkResourcesSeverityStatusV2": {
            "type": "object",
            "properties": {
                "critical": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "high": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "low": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "medium": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "none": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                },
                "total": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResult": {
            "type": "object",
            "properties": {
                "passed": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkStatusResultV2": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "passed": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTagsResult": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "uniqueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTrendDatapoint": {
            "type": "object",
            "properties": {
                "checks": {
                    "$ref": "#/definitions/types.SeverityResult"
                },
                "complianceStatusSummary": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatusSummary"
                },
                "controlsSeverityStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlsSeverityStatus"
                },
                "timestamp": {
                    "type": "string",
                    "example": "1686346668"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTrendDatapointV3": {
            "type": "object",
            "properties": {
                "compliance_results_summary": {
                    "type": "object",
                    "properties": {
                        "incidents": {
                            "type": "integer"
                        },
                        "non_incidents": {
                            "type": "integer"
                        }
                    }
                },
                "incidents_severity_breakdown": {
                    "$ref": "#/definitions/types.SeverityResult"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.CategoryControls": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ServiceControls"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResult": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "string",
                    "example": "azure_cis_v140"
                },
                "complianceJobID": {
                    "type": "integer",
                    "example": 1
                },
                "complianceStatus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatus"
                        }
                    ],
                    "example": "alarm"
                },
                "controlID": {
                    "type": "string",
                    "example": "azure_cis_v140_7_5"
                },
                "controlPath": {
                    "type": "string",
                    "example": "aws_cis2/aws_cis2_1/unsecure_http"
                },
                "controlTitle": {
                    "type": "string"
                },
                "costImpact": {
                    "type": "number",
                    "example": 0.5
                },
                "evaluatedAt": {
                    "type": "integer",
                    "example": 1589395200
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "integrationID": {
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "integrationName": {
                    "description": "Connection ID",
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "integrationType": {
                    "type": "string",
                    "example": "Azure"
                },
                "lastEvent": {
                    "type": "string",
                    "example": "1589395200"
                },
                "parentBenchmarkNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Azure CIS v1.4.0"
                    ]
                },
                "platformResourceID": {
                    "type": "string",
                    "example": "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1"
                },
                "providerID": {
                    "description": "Connection ID",
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "reason": {
                    "type": "string",
                    "example": "The VM is not using managed disks"
                },
                "resourceID": {
                    "type": "string",
                    "example": "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1"
                },
                "resourceName": {
                    "type": "string",
                    "example": "vm-1"
                },
                "resourceType": {
                    "type": "string",
                    "example": "Microsoft.Compute/virtualMachines"
                },
                "resourceTypeName": {
                    "type": "string",
                    "example": "Virtual Machine"
                },
                "runnerID": {
                    "type": "integer",
                    "example": 1
                },
                "severity": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.ComplianceResultSeverity"
                        }
                    ],
                    "example": "low"
                },
                "sortKey": {
                    "type": "array",
                    "items": {}
                },
                "stateActive": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEvent": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "string",
                    "example": "azure_cis_v140"
                },
                "complianceJobID": {
                    "type": "integer"
                },
                "complianceResultID": {
                    "type": "string"
                },
                "complianceStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatus"
                },
                "controlID": {
                    "type": "string",
                    "example": "azure_cis_v140_7_5"
                },
                "evaluatedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "8e0f8e7a1b1c4e6fb7e49c6af9d2b1c8"
                },
                "integrationID": {
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "integrationName": {
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "integrationType": {
                    "type": "string",
                    "example": "Azure"
                },
                "parentComplianceJobID": {
                    "type": "integer"
                },
                "platformResourceID": {
                    "type": "string",
                    "example": "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1"
                },
                "previousComplianceStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatus"
                },
                "previousStateActive": {
                    "type": "boolean"
                },
                "providerID": {
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "reason": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string",
                    "example": "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1"
                },
                "resourceLocation": {
                    "type": "string",
                    "example": "eastus"
                },
                "resourceName": {
                    "type": "string",
                    "example": "vm-1"
                },
                "resourceType": {
                    "type": "string",
                    "example": "Microsoft.Compute/virtualMachines"
                },
                "resourceTypeName": {
                    "description": "Fake fields (won't be stored in ES)",
                    "type": "string",
                    "example": "Virtual Machine"
                },
                "severity": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.ComplianceResultSeverity"
                        }
                    ],
                    "example": "low"
                },
                "sortKey": {
                    "type": "array",
                    "items": {}
                },
                "stateActive": {
                    "type": "boolean"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEventFilters": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "azure_cis_v140"
                    ]
                },
                "complianceResultID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "8e0f8e7a1b1c4e6fb7e49c6af9d2b1c8"
                    ]
                },
                "complianceStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatus"
                    },
                    "example": [
                        "alarm"
                    ]
                },
                "connector": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Type"
                    },
                    "example": [
                        "Azure"
                    ]
                },
                "controlID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "azure_cis_v140_7_5"
                    ]
                },
                "evaluatedAt": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        }
                    }
                },
                "integrationGroup": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "active"
                    ]
                },
                "integrationID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                    ]
                },
                "notIntegrationID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                    ]
                },
                "platformResourceID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1"
                    ]
                },
                "resourceType": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines"
                    ]
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ComplianceResultSeverity"
                    },
                    "example": [
                        "low"
                    ]
                },
                "stateActive": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "example": [
                        true
                    ]
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEventFiltersWithMetadata": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "complianceStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "connector": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "controlID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "integrationID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "resourceCollection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "resourceTypeID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "stateActive": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEventsSort": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "complianceStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "connector": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "controlID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "integrationID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "platformResourceID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "resourceType": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "severity": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "stateActive": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFilters": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "azure_cis_v140"
                    ]
                },
                "complianceStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatus"
                    },
                    "example": [
                        "alarm"
                    ]
                },
                "controlID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "azure_cis_v140_7_5"
                    ]
                },
                "evaluatedAt": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        }
                    }
                },
                "integrationGroup": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "active"
                    ]
                },
                "integrationID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                    ]
                },
                "integrationType": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Azure"
                    ]
                },
                "interval": {
                    "type": "string",
                    "example": "5m"
                },
                "jobID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastEvent": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        }
                    }
                },
                "notIntegrationID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                    ]
                },
                "resourceID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1"
                    ]
                },
                "resourceTypeID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines"
                    ]
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ComplianceResultSeverity"
                    },
                    "example": [
                        "low"
                    ]
                },
                "stateActive": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "example": [
                        true
                    ]
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFiltersV2": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "control_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationInfoFilter"
                    }
                },
                "is_active": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "is_compliant": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "last_event": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        }
                    }
                },
                "not_benchmark_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "not_control_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "not_last_event": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        }
                    }
                },
                "not_resource_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "not_resource_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "not_severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ComplianceResultSeverity"
                    }
                },
                "resource_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resource_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ComplianceResultSeverity"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFiltersWithMetadata": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "complianceStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "controlID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "integrationID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "integrationType": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "resourceCollection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "resourceTypeID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                },
                "stateActive": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultKPIResponse": {
            "type": "object",
            "properties": {
                "failedComplianceResultsCount": {
                    "type": "integer"
                },
                "failedIntegrationCount": {
                    "type": "integer"
                },
                "failedControlCount": {
                    "type": "integer"
                },
                "failedResourceCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultSummaryFilters": {
            "type": "object",
            "properties": {
                "integrationID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceTypeID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultsSort": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "complianceStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "controlID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "integrationID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "integrationType": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "platformResourceID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "resourceID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "resourceTypeID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "severity": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "stateActive": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultsSortV2": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "compliance_status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "control_id": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "last_updated": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "resource_type": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "severity": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatus": {
            "type": "string",
            "enum": [
                "failed",
                "passed"
            ],
            "x-enum-varnames": [
                "ComplianceStatusFailed",
                "ComplianceStatusPassed"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatusSummary": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "passed": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatusSummaryV2": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "passed": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfBenchmarkRequest": {
            "type": "object",
            "properties": {
                "benchmarks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_root": {
                    "type": "boolean"
                },
                "show_top": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfBenchmarkResponse": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "benchmark_title": {
                    "type": "string"
                },
                "compliance_results_summary": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatusSummaryV2"
                },
                "compliance_score": {
                    "type": "number"
                },
                "connectors": {
                    "description": "Benchmark connectors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cost_impact": {
                    "type": "number"
                },
                "issues_count": {
                    "type": "integer"
                },
                "last_evaluated_at": {
                    "type": "string"
                },
                "last_job_id": {
                    "type": "string"
                },
                "last_job_status": {
                    "type": "string"
                },
                "severity_summary_by_control": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlsSeverityStatusV2"
                },
                "severity_summary_by_incidents": {
                    "$ref": "#/definitions/types.SeverityResultV2"
                },
                "severity_summary_by_resource": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkResourcesSeverityStatusV2"
                },
                "top_controls_with_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopFiledRecordV2"
                    }
                },
                "top_integrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopIntegration"
                    }
                },
                "top_resource_types_with_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopFiledRecordV2"
                    }
                },
                "top_resources_with_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopFiledRecordV2"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfIntegrationRequest": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "integration": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationFilter"
                },
                "show_top": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceSummaryOfIntegrationResponse": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "compliance_results_summary": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatusSummaryV2"
                },
                "compliance_score": {
                    "type": "number"
                },
                "integration": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationInfo"
                },
                "issues_count": {
                    "type": "integer"
                },
                "last_evaluated_at": {
                    "type": "string"
                },
                "last_job_id": {
                    "type": "string"
                },
                "last_job_status": {
                    "type": "string"
                },
                "severity_summary_by_control": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkControlsSeverityStatusV2"
                },
                "severity_summary_by_resource": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkResourcesSeverityStatusV2"
                },
                "top_controls_with_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopFiledRecordV2"
                    }
                },
                "top_resource_types_with_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopFiledRecordV2"
                    }
                },
                "top_resources_with_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopFiledRecordV2"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.Control": {
            "type": "object",
            "properties": {
                "cliRemediation": {
                    "type": "string",
                    "example": "To enable multi-factor authentication for a user, run the following command..."
                },
                "connector": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Azure"
                    ]
                },
                "createdAt": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Enable multi-factor authentication for all user credentials who have write access to Azure resources. These include roles like 'Service Co-Administrators', 'Subscription Owners', 'Contributors'."
                },
                "documentURI": {
                    "type": "string",
                    "example": "benchmarks/azure_cis_v140_1_1.md"
                },
                "enabled": {
                    "type": "boolean",
                    "example": true
                },
                "explanation": {
                    "type": "string",
                    "example": "Multi-factor authentication adds an additional layer of security by requiring users to enter a code from a mobile device or phone in addition to their username and password when signing into Azure."
                },
                "guardrailRemediation": {
                    "type": "string",
                    "example": "To enable multi-factor authentication for a user, run the following command..."
                },
                "id": {
                    "type": "string",
                    "example": "azure_cis_v140_1_1"
                },
                "managed": {
                    "type": "boolean",
                    "example": true
                },
                "manualRemediation": {
                    "type": "string",
                    "example": "To enable multi-factor authentication for a user, run the following command..."
                },
                "manualVerification": {
                    "type": "boolean",
                    "example": true
                },
                "nonComplianceCost": {
                    "type": "string",
                    "example": "Non-compliance to this control could result in several costs including..."
                },
                "programmaticRemediation": {
                    "type": "string",
                    "example": "To enable multi-factor authentication for a user, run the following command..."
                },
                "query": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.Policy"
                },
                "severity": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.ComplianceResultSeverity"
                        }
                    ],
                    "example": "low"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "example": "1.1 Ensure that multi-factor authentication status is enabled for all privileged users"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "usefulExample": {
                    "type": "string",
                    "example": "Access to resources must be closely controlled to prevent malicious activity like data theft..."
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ControlSummary": {
            "type": "object",
            "properties": {
                "benchmarks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.Benchmark"
                    }
                },
                "control": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.Control"
                },
                "costImpact": {
                    "type": "number"
                },
                "evaluatedAt": {
                    "type": "string"
                },
                "failedIntegrationCount": {
                    "type": "integer"
                },
                "failedResourcesCount": {
                    "type": "integer"
                },
                "passed": {
                    "type": "boolean"
                },
                "resourceType": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceType"
                },
                "totalIntegrationCount": {
                    "type": "integer"
                },
                "totalResourcesCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ControlTagsResult": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "uniqueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ControlTrendDatapoint": {
            "type": "object",
            "properties": {
                "failedIntegrationCount": {
                    "type": "integer"
                },
                "failedResourcesCount": {
                    "type": "integer"
                },
                "timestamp": {
                    "description": "Time",
                    "type": "integer",
                    "example": 1686346668
                },
                "totalIntegrationCount": {
                    "type": "integer"
                },
                "totalResourcesCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ControlsFilterSummaryRequest": {
            "type": "object",
            "properties": {
                "compliance_result_filters": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFilters"
                },
                "connector": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "has_parameters": {
                    "type": "boolean"
                },
                "list_of_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parent_benchmark": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "primary_table": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "root_benchmark": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "tags_regex": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ControlsFilterSummaryResult": {
            "type": "object",
            "properties": {
                "connector": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controls_count": {
                    "type": "integer"
                },
                "list_of_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "primary_table": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.CountComplianceResultDriftEventsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.CountComplianceResultsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.FilterWithMetadata": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 10
                },
                "displayName": {
                    "type": "string",
                    "example": "displayName"
                },
                "key": {
                    "type": "string",
                    "example": "key"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetAccountsComplianceResultsSummaryResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.AccountsComplianceResultsSummary"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsChildren": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsChildren"
                    }
                },
                "compliance_results": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsComplianceResults"
                },
                "control_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsComplianceResults": {
            "type": "object",
            "properties": {
                "integration_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastEvaluated_at": {
                    "type": "string"
                },
                "results": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsMetadata": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "integration_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "list_of_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "number_of_controls": {
                    "type": "integer"
                },
                "primary_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supported_controls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "type": "string"
                },
                "track_drift_events": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsRequest": {
            "type": "object",
            "properties": {
                "benchmark_children": {
                    "type": "boolean"
                },
                "compliance_result_filters": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultSummaryFilters"
                },
                "tags_regex": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsResponse": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsChildren"
                    }
                },
                "compliance_results": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsComplianceResults"
                },
                "metadata": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkDetailsMetadata"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListItem": {
            "type": "object",
            "properties": {
                "benchmark": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListMetadata"
                },
                "incident_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListMetadata": {
            "type": "object",
            "properties": {
                "auto_assigned": {
                    "type": "boolean"
                },
                "connectors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "number_of_assignments": {
                    "type": "integer"
                },
                "number_of_controls": {
                    "type": "integer"
                },
                "primary_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "type": "string"
                },
                "track_drift_events": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListRequest": {
            "type": "object",
            "properties": {
                "assigned": {
                    "type": "boolean"
                },
                "compliance_result_filters": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultSummaryFilters"
                },
                "connectors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cursor": {
                    "type": "integer"
                },
                "integration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationFilter"
                    }
                },
                "is_baseline": {
                    "type": "boolean"
                },
                "list_of_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parent_benchmark_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "primary_table": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "root": {
                    "type": "boolean"
                },
                "sort_by": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "tags_regex": {
                    "type": "string"
                },
                "title_regex": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkListItem"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkTrendV3Request": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "integer"
                },
                "granularity": {
                    "type": "integer"
                },
                "integration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationFilter"
                    }
                },
                "start_time": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetBenchmarkTrendV3Response": {
            "type": "object",
            "properties": {
                "datapoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTrendDatapointV3"
                    }
                },
                "maximum_values": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTrendDatapointV3"
                },
                "minimum_values": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTrendDatapointV3"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetCategoriesControlsResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.CategoryControls"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultDriftEventsByComplianceResultIDResponse": {
            "type": "object",
            "properties": {
                "complianceResultDriftEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEvent"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultDriftEventsRequest": {
            "type": "object",
            "properties": {
                "afterSortKey": {
                    "type": "array",
                    "items": {}
                },
                "filters": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEventFilters"
                },
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEventsSort"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultDriftEventsResponse": {
            "type": "object",
            "properties": {
                "complianceResultDriftEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEvent"
                    }
                },
                "totalCount": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultsRequest": {
            "type": "object",
            "properties": {
                "afterSortKey": {
                    "type": "array",
                    "items": {}
                },
                "filters": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFilters"
                },
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultsSort"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultsRequestV2": {
            "type": "object",
            "properties": {
                "afterSortKey": {
                    "type": "array",
                    "items": {}
                },
                "filters": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFiltersV2"
                },
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultsSortV2"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetComplianceResultsResponse": {
            "type": "object",
            "properties": {
                "complianceResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResult"
                    }
                },
                "totalCount": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetControlDetailsResponse": {
            "type": "object",
            "properties": {
                "benchmarks": {
                    "type": "object",
                    "properties": {
                        "fullPath": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "roots": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "integrationType": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "type": "object",
                    "properties": {
                        "engine": {
                            "type": "string"
                        },
                        "listOfTables": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "parameters": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.QueryParameter"
                            }
                        },
                        "primaryTable": {
                            "type": "string"
                        },
                        "queryToExecute": {
                            "type": "string"
                        }
                    }
                },
                "severity": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetServicesComplianceResultsSummaryResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ServiceComplianceResultsSummary"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetSingleResourceFindingRequest": {
            "type": "object",
            "properties": {
                "platformResourceID": {
                    "type": "string",
                    "example": "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1"
                },
                "resourceType": {
                    "type": "string",
                    "example": "Microsoft.Compute/virtualMachines"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetSingleResourceFindingResponse": {
            "type": "object",
            "properties": {
                "complianceResultDriftEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultDriftEvent"
                    }
                },
                "controls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResult"
                    }
                },
                "resource": {
                    "$ref": "#/definitions/es.Resource"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.GetTopFieldResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.TopFieldRecord"
                    }
                },
                "totalCount": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationFilter": {
            "type": "object",
            "properties": {
                "integration_id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationFilterRequest": {
            "type": "object",
            "properties": {
                "autoEnable": {
                    "type": "boolean"
                },
                "disable": {
                    "type": "boolean"
                },
                "integration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationFilter"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationInfo": {
            "type": "object",
            "properties": {
                "integration_id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationInfoFilter": {
            "type": "object",
            "properties": {
                "integration_id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListBenchmarksFiltersResponse": {
            "type": "object",
            "properties": {
                "list_of_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parent_benchmark_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "primary_table": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkTagsResult"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListBenchmarksSummaryResponse": {
            "type": "object",
            "properties": {
                "benchmarkSummary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.BenchmarkEvaluationSummary"
                    }
                },
                "totalChecks": {
                    "$ref": "#/definitions/types.SeverityResult"
                },
                "totalComplianceStatusSummary": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatusSummary"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListComplianceJobsHistoryItem": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "compliance_results_summary": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatusSummaryV2"
                },
                "compliance_score": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "integrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationInfo"
                    }
                },
                "job_id": {
                    "type": "string"
                },
                "job_status": {
                    "type": "string"
                },
                "trigger_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListComplianceJobsHistoryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListComplianceJobsHistoryItem"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListControlsFilterRequest": {
            "type": "object",
            "properties": {
                "compliance_result_filters": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResultFilters"
                },
                "compliance_result_summary": {
                    "type": "boolean"
                },
                "cursor": {
                    "type": "integer"
                },
                "has_parameters": {
                    "type": "boolean"
                },
                "integration_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "list_of_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parent_benchmark": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "primary_table": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "root_benchmark": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sort_by": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "tags_regex": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListControlsFilterResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ListControlsFilterResultControl"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListControlsFilterResultControl": {
            "type": "object",
            "properties": {
                "compliance_results_summary": {
                    "type": "object",
                    "properties": {
                        "compliant_resources": {
                            "type": "integer"
                        },
                        "cost_impact": {
                            "type": "number"
                        },
                        "impacted_resources": {
                            "type": "integer"
                        },
                        "incident_count": {
                            "type": "integer"
                        },
                        "non_incident_count": {
                            "type": "integer"
                        },
                        "noncompliant_resources": {
                            "type": "integer"
                        }
                    }
                },
                "connector": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "query": {
                    "type": "object",
                    "properties": {
                        "list_of_tables": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "parameters": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.QueryParameter"
                            }
                        },
                        "primary_table": {
                            "type": "string"
                        }
                    }
                },
                "severity": {
                    "$ref": "#/definitions/types.ComplianceResultSeverity"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListControlsFiltersResponse": {
            "type": "object",
            "properties": {
                "list_of_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parent_benchmark": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "primary_table": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "root_benchmark": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ControlTagsResult"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListResourceFindingsRequest": {
            "type": "object",
            "properties": {
                "afterSortKey": {
                    "type": "array",
                    "items": {}
                },
                "filters": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ResourceFindingFilters"
                },
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ResourceFindingsSort"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ListResourceFindingsResponse": {
            "type": "object",
            "properties": {
                "resourceFindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ResourceFinding"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.Policy": {
            "type": "object",
            "properties": {
                "Global": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-06-07T14:00:15.677558Z"
                },
                "engine": {
                    "type": "string",
                    "example": "steampipe-v0.5"
                },
                "id": {
                    "type": "string",
                    "example": "azure_ad_manual_control"
                },
                "integrationType": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Azure"
                    ]
                },
                "listOfTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "null"
                    ]
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.QueryParameter"
                    }
                },
                "primaryTable": {
                    "type": "string",
                    "example": "null"
                },
                "queryToExecute": {
                    "type": "string",
                    "example": "select\n  -- Required Columns\n  'active_directory' as resource,\n  'info' as status,\n  'Manual verification required.' as reason;\n"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2023-06-16T14:58:08.759554Z"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.QueryParameter": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "key"
                },
                "required": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ResourceFinding": {
            "type": "object",
            "properties": {
                "complianceJobID": {
                    "type": "string"
                },
                "complianceResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceResult"
                    }
                },
                "evaluatedAt": {
                    "type": "string"
                },
                "failedCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "integrationID": {
                    "description": "Connection ID",
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "integrationName": {
                    "description": "Connection ID",
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "integrationType": {
                    "type": "string"
                },
                "platformResourceID": {
                    "type": "string"
                },
                "providerID": {
                    "description": "Connection ID",
                    "type": "string",
                    "example": "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                },
                "resourceLocation": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeLabel": {
                    "type": "string"
                },
                "sortKey": {
                    "type": "array",
                    "items": {}
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ResourceFindingFilters": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "azure_cis_v140"
                    ]
                },
                "complianceStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.ComplianceStatus"
                    },
                    "example": [
                        "alarm"
                    ]
                },
                "compliance_job_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionGroup": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "healthy"
                    ]
                },
                "controlID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "azure_cis_v140_7_5"
                    ]
                },
                "evaluatedAt": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        }
                    }
                },
                "integrationID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                    ]
                },
                "integrationType": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Azure"
                    ]
                },
                "interval": {
                    "type": "string"
                },
                "notIntegrationID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8"
                    ]
                },
                "resourceCollection": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "example-rc"
                    ]
                },
                "resourceID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1"
                    ]
                },
                "resourceTypeID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "/subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines"
                    ]
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ComplianceResultSeverity"
                    },
                    "example": [
                        "low"
                    ]
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ResourceFindingsSort": {
            "type": "object",
            "properties": {
                "complianceStatus": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "failedCount": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "platformResourceID": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "resourceLocation": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "resourceName": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                },
                "resourceType": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ServiceComplianceResultsSummary": {
            "type": "object",
            "properties": {
                "complianceStatusesCount": {
                    "type": "object",
                    "properties": {
                        "failed": {
                            "type": "integer"
                        },
                        "passed": {
                            "type": "integer"
                        }
                    }
                },
                "securityScore": {
                    "type": "number"
                },
                "serviceLabel": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "severitiesCount": {
                    "type": "object",
                    "properties": {
                        "critical": {
                            "type": "integer"
                        },
                        "high": {
                            "type": "integer"
                        },
                        "low": {
                            "type": "integer"
                        },
                        "medium": {
                            "type": "integer"
                        },
                        "none": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.ServiceControls": {
            "type": "object",
            "properties": {
                "controls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.Control"
                    }
                },
                "service": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.SortDirection": {
            "type": "string",
            "enum": [
                "asc",
                "desc"
            ],
            "x-enum-varnames": [
                "SortDirectionAscending",
                "SortDirectionDescending"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.TopFieldRecord": {
            "type": "object",
            "properties": {
                "control": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.Control"
                },
                "controlCount": {
                    "type": "integer"
                },
                "controlTotalCount": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "field": {
                    "type": "string"
                },
                "integration": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.Integration"
                },
                "resourceCount": {
                    "type": "integer"
                },
                "resourceTotalCount": {
                    "type": "integer"
                },
                "resourceType": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceType"
                },
                "service": {
                    "type": "string"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.TopFiledRecordV2": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "issues": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_compliance_api.TopIntegration": {
            "type": "object",
            "properties": {
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_compliance_api.IntegrationInfo"
                },
                "issues": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.BenchmarkAuditHistoryItem": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ComplianceJobStatus"
                },
                "number_of_integrations": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.BenchmarkAuditHistoryRequest": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                },
                "interval": {
                    "type": "string"
                },
                "job_status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "sort_by": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.BenchmarkAuditHistoryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.BenchmarkAuditHistoryItem"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.CancelJobRequest": {
            "type": "object",
            "properties": {
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                },
                "job_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "job_type": {
                    "type": "string"
                },
                "selector": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.CancelJobResponse": {
            "type": "object",
            "properties": {
                "canceled": {
                    "type": "boolean"
                },
                "job_id": {
                    "type": "string"
                },
                "job_type": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ComplianceJobStatus": {
            "type": "string",
            "enum": [
                "CREATED",
                "RUNNERS_IN_PROGRESS",
                "SUMMARIZER_IN_PROGRESS",
                "FAILED",
                "SUCCEEDED"
            ],
            "x-enum-varnames": [
                "ComplianceJobCreated",
                "ComplianceJobRunnersInProgress",
                "ComplianceJobSummarizerInProgress",
                "ComplianceJobFailed",
                "ComplianceJobSucceeded"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.DescribeResourceJobStatus": {
            "type": "string",
            "enum": [
                "CREATED",
                "QUEUED",
                "IN_PROGRESS",
                "OLD_RESOURCE_DELETION",
                "TIMEOUT",
                "FAILED",
                "SUCCEEDED",
                "REMOVING_RESOURCES",
                "CANCELED"
            ],
            "x-enum-varnames": [
                "DescribeResourceJobCreated",
                "DescribeResourceJobQueued",
                "DescribeResourceJobInProgress",
                "DescribeResourceJobOldResourceDeletion",
                "DescribeResourceJobTimeout",
                "DescribeResourceJobFailed",
                "DescribeResourceJobSucceeded",
                "DescribeResourceJobRemovingResources",
                "DescribeResourceJobCanceled"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.DiscoveryProgressStatusBreakdown": {
            "type": "object",
            "properties": {
                "canceled_count": {
                    "type": "integer"
                },
                "created_count": {
                    "type": "integer"
                },
                "failed_count": {
                    "type": "integer"
                },
                "in_progress_count": {
                    "type": "integer"
                },
                "old_resource_deletion": {
                    "type": "integer"
                },
                "queued_count": {
                    "type": "integer"
                },
                "removing_resources_count": {
                    "type": "integer"
                },
                "succeeded_count": {
                    "type": "integer"
                },
                "timeout_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.DiscoveryProgressStatusSummary": {
            "type": "object",
            "properties": {
                "processed_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetAnalyticsJobStatusResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetAnalyticsJobsHistoryResponse": {
            "type": "object",
            "properties": {
                "date_time": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_analytics_api.JobStatus"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetAsyncQueryRunJobStatusResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "failure_message": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_query-runner.QueryRunnerStatus"
                },
                "query_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobStatusResponse": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobsHistoryByIntegrationRequest": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cursor": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                },
                "job_status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "sort_by": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobsHistoryRequest": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cursor": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "job_status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "sort_by": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetComplianceJobsHistoryResponse": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "date_time": {
                    "type": "string"
                },
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ComplianceJobStatus"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobStatusResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discovery_type": {
                    "type": "string"
                },
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_status": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobsHistoryByIntegrationRequest": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "integer"
                },
                "discovery_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_time": {
                    "type": "string"
                },
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                },
                "job_status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "resource_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sort_by": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobsHistoryRequest": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "integer"
                },
                "discovery_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_time": {
                    "type": "string"
                },
                "job_status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "resource_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sort_by": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetDescribeJobsHistoryResponse": {
            "type": "object",
            "properties": {
                "date_time": {
                    "type": "string"
                },
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.DescribeResourceJobStatus"
                },
                "resource_type": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetIntegrationDiscoveryProgressRequest": {
            "type": "object",
            "properties": {
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                },
                "trigger_id": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetIntegrationDiscoveryProgressResponse": {
            "type": "object",
            "properties": {
                "integration_progress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationDiscoveryProgressStatus"
                    }
                },
                "trigger_id_progress_breakdown": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.DiscoveryProgressStatusBreakdown"
                },
                "trigger_id_progress_summary": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.DiscoveryProgressStatusSummary"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.GetIntegrationLastDiscoveryJobRequest": {
            "type": "object",
            "properties": {
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.IntegrationDiscoveryProgressStatus": {
            "type": "object",
            "properties": {
                "breakdown": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.DiscoveryProgressStatusBreakdown"
                },
                "integration": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                },
                "summary": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.DiscoveryProgressStatusSummary"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo": {
            "type": "object",
            "properties": {
                "integration_id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter": {
            "type": "object",
            "properties": {
                "integration_id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.Job": {
            "type": "object",
            "properties": {
                "connectionID": {
                    "type": "string"
                },
                "connectionProviderID": {
                    "type": "string"
                },
                "connectionProviderName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "failureReason": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.JobType"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.JobSeqCheckResponse": {
            "type": "object",
            "properties": {
                "isRunning": {
                    "type": "boolean"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.JobSummary": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.JobType"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.JobType": {
            "type": "string",
            "enum": [
                "discovery",
                "analytics",
                "compliance"
            ],
            "x-enum-varnames": [
                "JobType_Discovery",
                "JobType_Analytics",
                "JobType_Compliance"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListComplianceJobsHistoryItem": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "integrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                    }
                },
                "job_id": {
                    "type": "string"
                },
                "job_status": {
                    "type": "string"
                },
                "summarizer_jobs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trigger_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListComplianceJobsHistoryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListComplianceJobsHistoryItem"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListComplianceJobsRequest": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cursor": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                },
                "job_status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "sort_by": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListDescribeJobsRequest": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "integer"
                },
                "discovery_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_time": {
                    "type": "string"
                },
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                },
                "job_status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "resource_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sort_by": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListJobsByTypeItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "job_status": {
                    "type": "string"
                },
                "job_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListJobsByTypeRequest": {
            "type": "object",
            "properties": {
                "benchmark": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        }
                    }
                },
                "cursor": {
                    "type": "integer"
                },
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                },
                "job_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "job_type": {
                    "type": "string"
                },
                "per_page": {
                    "type": "integer"
                },
                "selector": {
                    "type": "string"
                },
                "sort_by": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListJobsByTypeResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.ListJobsByTypeItem"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListJobsRequest": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string"
                },
                "pageEnd": {
                    "type": "integer"
                },
                "pageStart": {
                    "type": "integer"
                },
                "sortBy": {
                    "type": "string"
                },
                "sortOrder": {
                    "type": "string"
                },
                "statusFilter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to": {
                    "type": "integer"
                },
                "typeFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.ListJobsResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.Job"
                    }
                },
                "summaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.JobSummary"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkByIdRequest": {
            "type": "object",
            "properties": {
                "integration_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "integration_id": {
                                "type": "string"
                            },
                            "integration_type": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "provider_id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkItem": {
            "type": "object",
            "properties": {
                "benchmark_id": {
                    "type": "string"
                },
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                    }
                },
                "job_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkRequest": {
            "type": "object",
            "properties": {
                "benchmark_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunBenchmarkItem"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.RunDiscoveryJob": {
            "type": "object",
            "properties": {
                "failure_reason": {
                    "type": "string"
                },
                "integration_info": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfo"
                },
                "job_id": {
                    "type": "integer"
                },
                "resource_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.RunDiscoveryRequest": {
            "type": "object",
            "properties": {
                "force_full": {
                    "description": "force full discovery. only matters if ResourceTypes is empty",
                    "type": "boolean"
                },
                "integration_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.IntegrationInfoFilter"
                    }
                },
                "resource_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.RunDiscoveryResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_describe_api.RunDiscoveryJob"
                    }
                },
                "trigger_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_describe_api.RunQueryResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "query_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_query-runner.QueryRunnerStatus"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.AnalyticsCategoriesResponse": {
            "type": "object",
            "properties": {
                "categoryResourceType": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.AnalyticsMetric": {
            "type": "object",
            "properties": {
                "finderPerConnectionQuery": {
                    "type": "string"
                },
                "finderQuery": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "integrationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_analytics_db.MetricType"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.AssetTableRow": {
            "type": "object",
            "properties": {
                "dimensionId": {
                    "type": "string",
                    "example": "compute"
                },
                "dimensionName": {
                    "type": "string",
                    "example": "Compute"
                },
                "integrationType": {
                    "type": "string"
                },
                "resourceCount": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.CategoriesTables": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.CostMetric": {
            "type": "object",
            "properties": {
                "cost_dimension_id": {
                    "type": "string",
                    "example": "microsoft_compute_disks"
                },
                "cost_dimension_name": {
                    "type": "string",
                    "example": "microsoft.compute/disks"
                },
                "daily_cost_at_end_time": {
                    "type": "number",
                    "minimum": 0,
                    "example": 14118.81523108568
                },
                "daily_cost_at_start_time": {
                    "type": "number",
                    "minimum": 0,
                    "example": 21232.10443638001
                },
                "finderPerConnectionQuery": {
                    "type": "string"
                },
                "finderQuery": {
                    "type": "string"
                },
                "integration_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Azure"
                    ]
                },
                "total_cost": {
                    "type": "number",
                    "minimum": 0,
                    "example": 621041.2436112489
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.CostStackedItem": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cost": {
                    "type": "number"
                },
                "metricID": {
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.CostTrendDatapoint": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number",
                    "minimum": 0
                },
                "costStacked": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.CostStackedItem"
                    }
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "totalIntegrationCount": {
                    "type": "integer"
                },
                "totalSuccessfulDescribedConnectionCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.CountAnalyticsMetricsResponse": {
            "type": "object",
            "properties": {
                "connectionCount": {
                    "type": "integer"
                },
                "metricCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.CountAnalyticsSpendResponse": {
            "type": "object",
            "properties": {
                "connectionCount": {
                    "type": "integer"
                },
                "metricCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.CountPair": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "minimum": 0
                },
                "old_count": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.GetAsyncQueryRunResultResponse": {
            "type": "object",
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdBy": {
                    "type": "string"
                },
                "evaluatedAt": {
                    "type": "integer"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.QueryParameter"
                    }
                },
                "queryID": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "runID": {
                    "type": "string"
                },
                "triggeredAt": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.GetParametersQueriesResponse": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ParametersQueries"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.GetResourceCategoriesCategory": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.GetResourceCategoriesTables"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.GetResourceCategoriesResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.GetResourceCategoriesCategory"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.GetResourceCategoriesTables": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "table": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ListCostCompositionResponse": {
            "type": "object",
            "properties": {
                "others": {
                    "type": "number",
                    "minimum": 0,
                    "example": 100
                },
                "top_values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "total_cost_value": {
                    "type": "number",
                    "minimum": 0,
                    "example": 1000
                },
                "total_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ListCostMetricsResponse": {
            "type": "object",
            "properties": {
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.CostMetric"
                    }
                },
                "total_cost": {
                    "type": "number",
                    "minimum": 0,
                    "example": 1000
                },
                "total_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ListMetricsResponse": {
            "type": "object",
            "properties": {
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.Metric"
                    }
                },
                "total_count": {
                    "type": "integer"
                },
                "total_metrics": {
                    "type": "integer"
                },
                "total_old_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ListQueriesFiltersResponse": {
            "type": "object",
            "properties": {
                "providers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryTagsResult"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ListQueriesV2Response": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryItemV2"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ListQueryRequest": {
            "type": "object",
            "properties": {
                "titleFilter": {
                    "description": "Specifies the Title",
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ListQueryV2Request": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "integer"
                },
                "has_parameters": {
                    "type": "boolean"
                },
                "integration_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "list_of_tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "per_page": {
                    "type": "integer"
                },
                "primary_table": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "tags_regex": {
                    "type": "string"
                },
                "title_filter": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ListResourceTypeCompositionResponse": {
            "type": "object",
            "properties": {
                "others": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.CountPair"
                },
                "top_values": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.CountPair"
                    }
                },
                "total_count": {
                    "type": "integer",
                    "minimum": 0
                },
                "total_value_count": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.Metric": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "Number of Resources of this Resource Type - Metric",
                    "type": "integer",
                    "example": 100
                },
                "finderPerConnectionQuery": {
                    "type": "string",
                    "example": "select * from platform_resources where resource_type = 'aws::ec2::instance' AND connection_id IN \u003cCONNECTION_ID_LIST\u003e"
                },
                "finderQuery": {
                    "type": "string",
                    "example": "select * from platform_resources where resource_type = 'aws::ec2::instance'"
                },
                "id": {
                    "type": "string",
                    "example": "vms"
                },
                "integrationTypes": {
                    "description": "Cloud Provider",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[Azure]"
                    ]
                },
                "last_evaluated": {
                    "description": "Last time the metric was evaluated",
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "name": {
                    "description": "Resource Type",
                    "type": "string",
                    "example": "VMs"
                },
                "old_count": {
                    "description": "Number of Resources of this Resource Type in the past - Metric",
                    "type": "integer",
                    "example": 90
                },
                "tags": {
                    "description": "Tags",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryHistory": {
            "type": "object",
            "properties": {
                "executed_at": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryItem": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Category (Tags[category])",
                    "type": "string"
                },
                "id": {
                    "description": "Policy Id",
                    "type": "string"
                },
                "integration_types": {
                    "description": "Provider",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "description": "Policy",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Title",
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryItemV2": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Policy Id",
                    "type": "string"
                },
                "integration_types": {
                    "description": "Provider",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "description": "Policy",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.Policy"
                        }
                    ]
                },
                "tags": {
                    "description": "Tags",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": {
                    "description": "Title",
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.NamedQuerySortItem": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "field": {
                    "description": "fill this with column name",
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryTagsResult": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "uniqueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.Page": {
            "type": "object",
            "properties": {
                "no": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ParametersQueries": {
            "type": "object",
            "properties": {
                "parameter": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQueryItemV2"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.Policy": {
            "type": "object",
            "properties": {
                "Global": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-06-07T14:00:15.677558Z"
                },
                "engine": {
                    "type": "string",
                    "example": "steampipe-v0.5"
                },
                "id": {
                    "type": "string",
                    "example": "azure_ad_manual_control"
                },
                "listOfTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "null"
                    ]
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.QueryParameter"
                    }
                },
                "primaryTable": {
                    "type": "string",
                    "example": "null"
                },
                "queryToExecute": {
                    "type": "string",
                    "example": "select\n  -- Required Columns\n  'active_directory' as resource,\n  'info' as status,\n  'Manual verification required.' as reason;\n"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2023-06-16T14:58:08.759554Z"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.QueryParameter": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "key"
                },
                "required": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollection": {
            "type": "object",
            "properties": {
                "integration_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/opengovernance.ResourceCollectionFilter"
                    }
                },
                "id": {
                    "type": "string"
                },
                "integration_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "last_evaluated_at": {
                    "type": "string"
                },
                "metric_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "resource_count": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionStatus"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionLandscape": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionLandscapeCategory"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionLandscapeCategory": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionLandscapeSubcategory"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionLandscapeItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logo_uri": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionLandscapeSubcategory": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionLandscapeItem"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCollectionStatus": {
            "type": "string",
            "enum": [
                "",
                "active",
                "inactive"
            ],
            "x-enum-varnames": [
                "ResourceCollectionStatusUnknown",
                "ResourceCollectionStatusActive",
                "ResourceCollectionStatusInactive"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCountStackedItem": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "count": {
                    "type": "integer"
                },
                "metricID": {
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceType": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "List supported steampipe Attributes (columns) for this resource type - Metadata (GET only)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "compliance": {
                    "description": "List of Compliance that support this Resource Type - Metadata (GET only)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "compliance_count": {
                    "description": "Number of Compliance that use this Resource Type - Metadata",
                    "type": "integer",
                    "minimum": 0
                },
                "count": {
                    "description": "Number of Resources of this Resource Type - Metric",
                    "type": "integer",
                    "minimum": 0,
                    "example": 100
                },
                "integration_type": {
                    "description": "Cloud Provider",
                    "type": "string",
                    "example": "Azure"
                },
                "logo_uri": {
                    "description": "Logo URI",
                    "type": "string",
                    "example": "https://opengovernance.io/logo.png"
                },
                "old_count": {
                    "description": "Number of Resources of this Resource Type in the past - Metric",
                    "type": "integer",
                    "minimum": 0,
                    "example": 90
                },
                "resource_name": {
                    "description": "Resource Name",
                    "type": "string",
                    "example": "VM"
                },
                "resource_type": {
                    "description": "Resource Type",
                    "type": "string",
                    "example": "Microsoft.Compute/virtualMachines"
                },
                "service_name": {
                    "description": "Service Name",
                    "type": "string",
                    "example": "compute"
                },
                "tags": {
                    "description": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "category:[Data and Analytics",
                        "Database",
                        "Integration",
                        "Management Governance",
                        "Storage]"
                    ]
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.ResourceTypeTrendDatapoint": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 100
                },
                "countStacked": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.ResourceCountStackedItem"
                    }
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "totalIntegrationCount": {
                    "type": "integer"
                },
                "totalSuccessfulDescribedConnectionCount": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.RunQueryByIDRequest": {
            "type": "object",
            "required": [
                "page"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "page": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.Page"
                },
                "query_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "sorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQuerySortItem"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.RunQueryRequest": {
            "type": "object",
            "required": [
                "page"
            ],
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "page": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.Page"
                },
                "query": {
                    "type": "string"
                },
                "sorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_inventory_api.NamedQuerySortItem"
                    }
                },
                "source_id": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.RunQueryResponse": {
            "type": "object",
            "properties": {
                "headers": {
                    "description": "Column names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "description": "Policy",
                    "type": "string"
                },
                "result": {
                    "description": "Result of query. in order to access a specific cell please use Result[Row][Column]",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                },
                "title": {
                    "description": "Policy Title",
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_api.SpendTableRow": {
            "type": "object",
            "properties": {
                "accountID": {
                    "type": "string",
                    "example": "1239042"
                },
                "category": {
                    "type": "string",
                    "example": "Compute"
                },
                "costValue": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "dimensionId": {
                    "type": "string",
                    "example": "compute"
                },
                "dimensionName": {
                    "type": "string",
                    "example": "Compute"
                },
                "integrationType": {
                    "type": "string",
                    "example": "AWS"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_inventory_query-runner.QueryRunnerStatus": {
            "type": "string",
            "enum": [
                "CREATED",
                "QUEUED",
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED",
                "TIMEOUT",
                "CANCELED"
            ],
            "x-enum-varnames": [
                "QueryRunnerCreated",
                "QueryRunnerQueued",
                "QueryRunnerInProgress",
                "QueryRunnerSucceeded",
                "QueryRunnerFailed",
                "QueryRunnerTimeOut",
                "QueryRunnerCanceled"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.About": {
            "type": "object",
            "properties": {
                "api_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.APIKeyResponse"
                    }
                },
                "app_version": {
                    "type": "string"
                },
                "dex_connectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.DexConnectorInfo"
                    }
                },
                "integrations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.Integration"
                        }
                    }
                },
                "primary_domain_url": {
                    "type": "string"
                },
                "sample_data": {
                    "type": "boolean"
                },
                "total_spend_governed": {
                    "type": "number"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_auth_api.GetUsersResponse"
                    }
                },
                "workspace_creation_time": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.DexConnectorInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.GetMigrationStatusResponse": {
            "type": "object",
            "properties": {
                "jobs_status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_migrator_db_model.JobInfo"
                    }
                },
                "status": {
                    "type": "string"
                },
                "summary": {
                    "type": "object",
                    "properties": {
                        "completed_jobs": {
                            "type": "integer"
                        },
                        "progress_percentage": {
                            "type": "number"
                        },
                        "total_jobs": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.GetSampleSyncStatusResponse": {
            "type": "object",
            "properties": {
                "progress": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.GetViewsCheckpointResponse": {
            "type": "object",
            "properties": {
                "checkpoint": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.ListQueryParametersResponse": {
            "type": "object",
            "properties": {
                "queryParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.QueryParameter"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.QueryParameter": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.SetConfigMetadataRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_api.SetQueryParameterRequest": {
            "type": "object",
            "properties": {
                "queryParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_api.QueryParameter"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_models.ConfigMetadata": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_models.MetadataKey"
                },
                "type": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_pkg_metadata_models.ConfigMetadataType"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_models.ConfigMetadataType": {
            "type": "string",
            "enum": [
                "string",
                "int",
                "bool",
                "json"
            ],
            "x-enum-varnames": [
                "ConfigMetadataTypeString",
                "ConfigMetadataTypeInt",
                "ConfigMetadataTypeBool",
                "ConfigMetadataTypeJSON"
            ]
        },
        "github_com_opengovern_opengovernance_pkg_metadata_models.Filter": {
            "type": "object",
            "properties": {
                "kayValue": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_pkg_metadata_models.MetadataKey": {
            "type": "string",
            "enum": [
                "workspace_ownership",
                "workspace_id",
                "workspace_name",
                "workspace_plan",
                "workspace_creation_time",
                "workspace_date_time_format",
                "workspace_debug_mode",
                "workspace_time_window",
                "asset_management_enabled",
                "compliance_enabled",
                "product_management_enabled",
                "custom_idp",
                "resource_limit",
                "connection_limit",
                "user_limit",
                "allow_invite",
                "workspace_key_support",
                "workspace_max_keys",
                "allowed_email_domains",
                "auto_discovery_method",
                "describe_job_interval",
                "cost_discovery_job_interval",
                "health_check_job_interval",
                "metrics_job_interval",
                "compliance_job_interval",
                "data_retention_duration",
                "analytics_git_url",
                "demo_data_s3_url",
                "asset_discovery_aws_policy_arns",
                "spend_discovery_aws_policy_arns",
                "asset_discovery_azure_role_ids",
                "spend_discovery_azure_role_ids",
                "customization_enabled",
                "aws_discovery_required_only",
                "azure_discovery_required_only",
                "asset_discovery_enabled",
                "spend_discovery_enabled"
            ],
            "x-enum-varnames": [
                "MetadataKeyWorkspaceOwnership",
                "MetadataKeyWorkspaceID",
                "MetadataKeyWorkspaceName",
                "MetadataKeyWorkspacePlan",
                "MetadataKeyWorkspaceCreationTime",
                "MetadataKeyWorkspaceDateTimeFormat",
                "MetadataKeyWorkspaceDebugMode",
                "MetadataKeyWorkspaceTimeWindow",
                "MetadataKeyAssetManagementEnabled",
                "MetadataKeyComplianceEnabled",
                "MetadataKeyProductManagementEnabled",
                "MetadataKeyCustomIDP",
                "MetadataKeyResourceLimit",
                "MetadataKeyConnectionLimit",
                "MetadataKeyUserLimit",
                "MetadataKeyAllowInvite",
                "MetadataKeyWorkspaceKeySupport",
                "MetadataKeyWorkspaceMaxKeys",
                "MetadataKeyAllowedEmailDomains",
                "MetadataKeyAutoDiscoveryMethod",
                "MetadataKeyDescribeJobInterval",
                "MetadataKeyCostDiscoveryJobInterval",
                "MetadataKeyHealthCheckJobInterval",
                "MetadataKeyMetricsJobInterval",
                "MetadataKeyComplianceJobInterval",
                "MetadataKeyDataRetention",
                "MetadataKeyAnalyticsGitURL",
                "DemoDataS3URL",
                "MetadataKeyAssetDiscoveryAWSPolicyARNs",
                "MetadataKeySpendDiscoveryAWSPolicyARNs",
                "MetadataKeyAssetDiscoveryAzureRoleIDs",
                "MetadataKeySpendDiscoveryAzureRoleIDs",
                "MetadataKeyCustomizationEnabled",
                "MetadataKeyAWSDiscoveryRequiredOnly",
                "MetadataKeyAzureDiscoveryRequiredOnly",
                "MetadataKeyAssetDiscoveryEnabled",
                "MetadataKeySpendDiscoveryEnabled"
            ]
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.AddIntegrationsRequest": {
            "type": "object",
            "properties": {
                "credential_id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "provider_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.Credential": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "secret": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.DiscoverIntegrationRequest": {
            "type": "object",
            "properties": {
                "credential_id": {
                    "type": "string"
                },
                "credentials": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "integration_type": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.Integration": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "credential_id": {
                    "type": "string"
                },
                "integration_id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "last_check": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.IntegrationState"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.IntegrationGroup": {
            "type": "object",
            "properties": {
                "integration_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"1e8ac3bf-c268-4a87-9374-ce04cc40a596\"]"
                    ]
                },
                "integrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.Integration"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "UltraSightApplication"
                },
                "query": {
                    "type": "string",
                    "example": "SELECT og_id FROM platform_integrations WHERE labels-\u003e'application' IS NOT NULL AND labels-\u003e'application' @\u003e '\"UltraSight\"'"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.IntegrationState": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "INACTIVE",
                "ARCHIVED"
            ],
            "x-enum-varnames": [
                "IntegrationStateActive",
                "IntegrationStateInactive",
                "IntegrationStateArchived"
            ]
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.IntegrationType": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "platform_name": {
                    "type": "string"
                },
                "tier": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.ListCredentialsRequest": {
            "type": "object",
            "properties": {
                "credential_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integration_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.ListCredentialsResponse": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.Credential"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.ListIntegrationTypesResponse": {
            "type": "object",
            "properties": {
                "integration_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.IntegrationType"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.ListIntegrationsResponse": {
            "type": "object",
            "properties": {
                "integrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_integration_api_models.Integration"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.UpdateCredentialRequest": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "github_com_opengovern_opengovernance_services_integration_api_models.UpdateRequest": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "github_com_opengovern_opengovernance_services_migrator_db_model.JobInfo": {
            "type": "object",
            "properties": {
                "failureReason": {
                    "type": "string"
                },
                "migrationJobName": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_migrator_db_model.RunnersStatus"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_migrator_db_model.RunnersStatus": {
            "type": "string",
            "enum": [
                "SUCCEEDED",
                "PENDING",
                "IN_PROGRESS",
                "FAILED"
            ],
            "x-enum-varnames": [
                "JobStatusCompleted",
                "JobStatusPending",
                "JobStatusInProgress",
                "JobStatusFailed"
            ]
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.AwsClusterWastageRequest": {
            "type": "object",
            "properties": {
                "cliVersion": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsCluster"
                },
                "identification": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRds"
                    }
                },
                "loading": {
                    "type": "boolean"
                },
                "metrics": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Datapoint"
                            }
                        }
                    }
                },
                "preferences": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.AwsClusterWastageResponse": {
            "type": "object",
            "properties": {
                "rightSizing": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsRightsizingRecommendation"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRds": {
            "type": "object",
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "backupRetentionPeriod": {
                    "type": "integer"
                },
                "clusterType": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsClusterType"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "hashedInstanceId": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "licenseModel": {
                    "type": "string"
                },
                "performanceInsightsEnabled": {
                    "type": "boolean"
                },
                "performanceInsightsRetentionPeriod": {
                    "type": "integer"
                },
                "storageIops": {
                    "type": "integer"
                },
                "storageSize": {
                    "type": "integer"
                },
                "storageThroughput": {
                    "type": "number"
                },
                "storageType": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsCluster": {
            "type": "object",
            "properties": {
                "engine": {
                    "type": "string"
                },
                "hashedClusterId": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsClusterType": {
            "type": "string",
            "enum": [
                "Single-AZ",
                "Multi-AZ",
                "Multi-AZ (readable standbys)"
            ],
            "x-enum-varnames": [
                "AwsRdsClusterTypeSingleInstance",
                "AwsRdsClusterTypeMultiAzOneInstance",
                "AwsRdsClusterTypeMultiAzTwoInstance"
            ]
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsRightsizingRecommendation": {
            "type": "object",
            "properties": {
                "current": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingAwsRds"
                },
                "description": {
                    "type": "string"
                },
                "freeMemoryBytes": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "freeStorageBytes": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "networkThroughputBytes": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "recommended": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingAwsRds"
                },
                "storageIops": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "storageThroughputBytes": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "vCPU": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "volumeBytesUsed": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsWastageRequest": {
            "type": "object",
            "properties": {
                "cliVersion": {
                    "type": "string"
                },
                "identification": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "instance": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRds"
                },
                "loading": {
                    "type": "boolean"
                },
                "metrics": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/types.Datapoint"
                        }
                    }
                },
                "preferences": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsWastageResponse": {
            "type": "object",
            "properties": {
                "rightSizing": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsRightsizingRecommendation"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.EBSVolumeRecommendation": {
            "type": "object",
            "properties": {
                "current": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingEBSVolume"
                },
                "description": {
                    "type": "string"
                },
                "iops": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "recommended": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingEBSVolume"
                },
                "throughput": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.EC2Instance": {
            "type": "object",
            "properties": {
                "coreCount": {
                    "type": "integer"
                },
                "ebsOptimized": {
                    "type": "boolean"
                },
                "hashedInstanceId": {
                    "type": "string"
                },
                "instanceLifecycle": {
                    "$ref": "#/definitions/types.InstanceLifecycleType"
                },
                "instanceType": {
                    "$ref": "#/definitions/types.InstanceType"
                },
                "monitoring": {
                    "$ref": "#/definitions/types.MonitoringState"
                },
                "placement": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.EC2Placement"
                },
                "platform": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/types.InstanceStateName"
                },
                "tenancy": {
                    "$ref": "#/definitions/types.Tenancy"
                },
                "threadsPerCore": {
                    "type": "integer"
                },
                "usageOperation": {
                    "type": "string"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.EC2InstanceWastageRequest": {
            "type": "object",
            "properties": {
                "cliVersion": {
                    "type": "string"
                },
                "identification": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "instance": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.EC2Instance"
                },
                "loading": {
                    "type": "boolean"
                },
                "metrics": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/types.Datapoint"
                        }
                    }
                },
                "preferences": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                },
                "volumeCount": {
                    "type": "integer"
                },
                "volumeMetrics": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Datapoint"
                            }
                        }
                    }
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.EC2Volume"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.EC2InstanceWastageResponse": {
            "type": "object",
            "properties": {
                "rightSizing": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.RightSizingRecommendation"
                },
                "volumes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.EBSVolumeRecommendation"
                    }
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.EC2Placement": {
            "type": "object",
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "hashedHostId": {
                    "type": "string"
                },
                "tenancy": {
                    "$ref": "#/definitions/types.Tenancy"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.EC2Volume": {
            "type": "object",
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "hashedVolumeId": {
                    "type": "string"
                },
                "iops": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "number"
                },
                "volumeType": {
                    "$ref": "#/definitions/types.VolumeType"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.RightSizingRecommendation": {
            "type": "object",
            "properties": {
                "current": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingEC2Instance"
                },
                "description": {
                    "type": "string"
                },
                "ebsBandwidth": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "ebsIops": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "memory": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "networkThroughput": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                },
                "recommended": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingEC2Instance"
                },
                "vCPU": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.Usage"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingAwsRds": {
            "type": "object",
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "clusterType": {
                    "$ref": "#/definitions/github_com_opengovern_opengovernance_services_wastage_api_entity.AwsRdsClusterType"
                },
                "computeCost": {
                    "type": "number"
                },
                "computeCostComponents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "cost": {
                    "type": "number"
                },
                "costComponents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "memoryGb": {
                    "type": "integer"
                },
                "processor": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "storageCost": {
                    "type": "number"
                },
                "storageCostComponents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "storageIops": {
                    "type": "integer"
                },
                "storageSize": {
                    "type": "integer"
                },
                "storageThroughput": {
                    "type": "number"
                },
                "storageType": {
                    "type": "string"
                },
                "vCPU": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingEBSVolume": {
            "type": "object",
            "properties": {
                "baselineIOPS": {
                    "type": "integer"
                },
                "baselineThroughput": {
                    "type": "number"
                },
                "cost": {
                    "type": "number"
                },
                "costComponents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "provisionedIOPS": {
                    "type": "integer"
                },
                "provisionedThroughput": {
                    "type": "number"
                },
                "tier": {
                    "$ref": "#/definitions/types.VolumeType"
                },
                "volumeSize": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.RightsizingEC2Instance": {
            "type": "object",
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "cost": {
                    "type": "number"
                },
                "costComponents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "ebsBandwidth": {
                    "type": "string"
                },
                "ebsIops": {
                    "type": "string"
                },
                "enaSupported": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "licensePrice": {
                    "type": "number"
                },
                "memory": {
                    "type": "number"
                },
                "networkThroughput": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "vCPU": {
                    "type": "integer"
                }
            }
        },
        "github_com_opengovern_opengovernance_services_wastage_api_entity.Usage": {
            "type": "object",
            "properties": {
                "avg": {
                    "type": "number"
                },
                "last": {
                    "$ref": "#/definitions/types.Datapoint"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "opengovernance.ResourceCollectionFilter": {
            "type": "object",
            "properties": {
                "account_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resource_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "source.Type": {
            "type": "string",
            "enum": [
                "",
                "AWS",
                "Azure"
            ],
            "x-enum-varnames": [
                "Nil",
                "CloudAWS",
                "CloudAzure"
            ]
        },
        "types.ComplianceResultSeverity": {
            "type": "string",
            "enum": [
                "none",
                "low",
                "medium",
                "high",
                "critical"
            ],
            "x-enum-varnames": [
                "ComplianceResultSeverityNone",
                "ComplianceResultSeverityLow",
                "ComplianceResultSeverityMedium",
                "ComplianceResultSeverityHigh",
                "ComplianceResultSeverityCritical"
            ]
        },
        "types.Datapoint": {
            "type": "object",
            "properties": {
                "average": {
                    "description": "The average of the metric values that correspond to the data point.",
                    "type": "number"
                },
                "extendedStatistics": {
                    "description": "The percentile statistic for the data point.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "maximum": {
                    "description": "The maximum metric value for the data point.",
                    "type": "number"
                },
                "minimum": {
                    "description": "The minimum metric value for the data point.",
                    "type": "number"
                },
                "sampleCount": {
                    "description": "The number of metric values that contributed to the aggregate value of this\ndata point.",
                    "type": "number"
                },
                "sum": {
                    "description": "The sum of the metric values for the data point.",
                    "type": "number"
                },
                "timestamp": {
                    "description": "The time stamp used for the data point.",
                    "type": "string"
                },
                "unit": {
                    "description": "The standard unit for the data point.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.StandardUnit"
                        }
                    ]
                }
            }
        },
        "types.InstanceLifecycleType": {
            "type": "string",
            "enum": [
                "spot",
                "scheduled",
                "capacity-block"
            ],
            "x-enum-varnames": [
                "InstanceLifecycleTypeSpot",
                "InstanceLifecycleTypeScheduled",
                "InstanceLifecycleTypeCapacityBlock"
            ]
        },
        "types.InstanceStateName": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "shutting-down",
                "terminated",
                "stopping",
                "stopped"
            ],
            "x-enum-varnames": [
                "InstanceStateNamePending",
                "InstanceStateNameRunning",
                "InstanceStateNameShuttingDown",
                "InstanceStateNameTerminated",
                "InstanceStateNameStopping",
                "InstanceStateNameStopped"
            ]
        },
        "types.InstanceType": {
            "type": "string",
            "enum": [
                "a1.medium",
                "a1.large",
                "a1.xlarge",
                "a1.2xlarge",
                "a1.4xlarge",
                "a1.metal",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.12xlarge",
                "c5.18xlarge",
                "c5.24xlarge",
                "c5.metal",
                "c5a.large",
                "c5a.xlarge",
                "c5a.2xlarge",
                "c5a.4xlarge",
                "c5a.8xlarge",
                "c5a.12xlarge",
                "c5a.16xlarge",
                "c5a.24xlarge",
                "c5ad.large",
                "c5ad.xlarge",
                "c5ad.2xlarge",
                "c5ad.4xlarge",
                "c5ad.8xlarge",
                "c5ad.12xlarge",
                "c5ad.16xlarge",
                "c5ad.24xlarge",
                "c5d.large",
                "c5d.xlarge",
                "c5d.2xlarge",
                "c5d.4xlarge",
                "c5d.9xlarge",
                "c5d.12xlarge",
                "c5d.18xlarge",
                "c5d.24xlarge",
                "c5d.metal",
                "c5n.large",
                "c5n.xlarge",
                "c5n.2xlarge",
                "c5n.4xlarge",
                "c5n.9xlarge",
                "c5n.18xlarge",
                "c5n.metal",
                "c6g.medium",
                "c6g.large",
                "c6g.xlarge",
                "c6g.2xlarge",
                "c6g.4xlarge",
                "c6g.8xlarge",
                "c6g.12xlarge",
                "c6g.16xlarge",
                "c6g.metal",
                "c6gd.medium",
                "c6gd.large",
                "c6gd.xlarge",
                "c6gd.2xlarge",
                "c6gd.4xlarge",
                "c6gd.8xlarge",
                "c6gd.12xlarge",
                "c6gd.16xlarge",
                "c6gd.metal",
                "c6gn.medium",
                "c6gn.large",
                "c6gn.xlarge",
                "c6gn.2xlarge",
                "c6gn.4xlarge",
                "c6gn.8xlarge",
                "c6gn.12xlarge",
                "c6gn.16xlarge",
                "c6i.large",
                "c6i.xlarge",
                "c6i.2xlarge",
                "c6i.4xlarge",
                "c6i.8xlarge",
                "c6i.12xlarge",
                "c6i.16xlarge",
                "c6i.24xlarge",
                "c6i.32xlarge",
                "c6i.metal",
                "cc1.4xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge",
                "cr1.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "d3.xlarge",
                "d3.2xlarge",
                "d3.4xlarge",
                "d3.8xlarge",
                "d3en.xlarge",
                "d3en.2xlarge",
                "d3en.4xlarge",
                "d3en.6xlarge",
                "d3en.8xlarge",
                "d3en.12xlarge",
                "dl1.24xlarge",
                "f1.2xlarge",
                "f1.4xlarge",
                "f1.16xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "g3.4xlarge",
                "g3.8xlarge",
                "g3.16xlarge",
                "g3s.xlarge",
                "g4ad.xlarge",
                "g4ad.2xlarge",
                "g4ad.4xlarge",
                "g4ad.8xlarge",
                "g4ad.16xlarge",
                "g4dn.xlarge",
                "g4dn.2xlarge",
                "g4dn.4xlarge",
                "g4dn.8xlarge",
                "g4dn.12xlarge",
                "g4dn.16xlarge",
                "g4dn.metal",
                "g5.xlarge",
                "g5.2xlarge",
                "g5.4xlarge",
                "g5.8xlarge",
                "g5.12xlarge",
                "g5.16xlarge",
                "g5.24xlarge",
                "g5.48xlarge",
                "g5g.xlarge",
                "g5g.2xlarge",
                "g5g.4xlarge",
                "g5g.8xlarge",
                "g5g.16xlarge",
                "g5g.metal",
                "hi1.4xlarge",
                "hpc6a.48xlarge",
                "hs1.8xlarge",
                "h1.2xlarge",
                "h1.4xlarge",
                "h1.8xlarge",
                "h1.16xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "i3.metal",
                "i3en.large",
                "i3en.xlarge",
                "i3en.2xlarge",
                "i3en.3xlarge",
                "i3en.6xlarge",
                "i3en.12xlarge",
                "i3en.24xlarge",
                "i3en.metal",
                "im4gn.large",
                "im4gn.xlarge",
                "im4gn.2xlarge",
                "im4gn.4xlarge",
                "im4gn.8xlarge",
                "im4gn.16xlarge",
                "inf1.xlarge",
                "inf1.2xlarge",
                "inf1.6xlarge",
                "inf1.24xlarge",
                "is4gen.medium",
                "is4gen.large",
                "is4gen.xlarge",
                "is4gen.2xlarge",
                "is4gen.4xlarge",
                "is4gen.8xlarge",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.8xlarge",
                "m5.12xlarge",
                "m5.16xlarge",
                "m5.24xlarge",
                "m5.metal",
                "m5a.large",
                "m5a.xlarge",
                "m5a.2xlarge",
                "m5a.4xlarge",
                "m5a.8xlarge",
                "m5a.12xlarge",
                "m5a.16xlarge",
                "m5a.24xlarge",
                "m5ad.large",
                "m5ad.xlarge",
                "m5ad.2xlarge",
                "m5ad.4xlarge",
                "m5ad.8xlarge",
                "m5ad.12xlarge",
                "m5ad.16xlarge",
                "m5ad.24xlarge",
                "m5d.large",
                "m5d.xlarge",
                "m5d.2xlarge",
                "m5d.4xlarge",
                "m5d.8xlarge",
                "m5d.12xlarge",
                "m5d.16xlarge",
                "m5d.24xlarge",
                "m5d.metal",
                "m5dn.large",
                "m5dn.xlarge",
                "m5dn.2xlarge",
                "m5dn.4xlarge",
                "m5dn.8xlarge",
                "m5dn.12xlarge",
                "m5dn.16xlarge",
                "m5dn.24xlarge",
                "m5dn.metal",
                "m5n.large",
                "m5n.xlarge",
                "m5n.2xlarge",
                "m5n.4xlarge",
                "m5n.8xlarge",
                "m5n.12xlarge",
                "m5n.16xlarge",
                "m5n.24xlarge",
                "m5n.metal",
                "m5zn.large",
                "m5zn.xlarge",
                "m5zn.2xlarge",
                "m5zn.3xlarge",
                "m5zn.6xlarge",
                "m5zn.12xlarge",
                "m5zn.metal",
                "m6a.large",
                "m6a.xlarge",
                "m6a.2xlarge",
                "m6a.4xlarge",
                "m6a.8xlarge",
                "m6a.12xlarge",
                "m6a.16xlarge",
                "m6a.24xlarge",
                "m6a.32xlarge",
                "m6a.48xlarge",
                "m6g.metal",
                "m6g.medium",
                "m6g.large",
                "m6g.xlarge",
                "m6g.2xlarge",
                "m6g.4xlarge",
                "m6g.8xlarge",
                "m6g.12xlarge",
                "m6g.16xlarge",
                "m6gd.metal",
                "m6gd.medium",
                "m6gd.large",
                "m6gd.xlarge",
                "m6gd.2xlarge",
                "m6gd.4xlarge",
                "m6gd.8xlarge",
                "m6gd.12xlarge",
                "m6gd.16xlarge",
                "m6i.large",
                "m6i.xlarge",
                "m6i.2xlarge",
                "m6i.4xlarge",
                "m6i.8xlarge",
                "m6i.12xlarge",
                "m6i.16xlarge",
                "m6i.24xlarge",
                "m6i.32xlarge",
                "m6i.metal",
                "mac1.metal",
                "p2.xlarge",
                "p2.8xlarge",
                "p2.16xlarge",
                "p3.2xlarge",
                "p3.8xlarge",
                "p3.16xlarge",
                "p3dn.24xlarge",
                "p4d.24xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "r5.large",
                "r5.xlarge",
                "r5.2xlarge",
                "r5.4xlarge",
                "r5.8xlarge",
                "r5.12xlarge",
                "r5.16xlarge",
                "r5.24xlarge",
                "r5.metal",
                "r5a.large",
                "r5a.xlarge",
                "r5a.2xlarge",
                "r5a.4xlarge",
                "r5a.8xlarge",
                "r5a.12xlarge",
                "r5a.16xlarge",
                "r5a.24xlarge",
                "r5ad.large",
                "r5ad.xlarge",
                "r5ad.2xlarge",
                "r5ad.4xlarge",
                "r5ad.8xlarge",
                "r5ad.12xlarge",
                "r5ad.16xlarge",
                "r5ad.24xlarge",
                "r5b.large",
                "r5b.xlarge",
                "r5b.2xlarge",
                "r5b.4xlarge",
                "r5b.8xlarge",
                "r5b.12xlarge",
                "r5b.16xlarge",
                "r5b.24xlarge",
                "r5b.metal",
                "r5d.large",
                "r5d.xlarge",
                "r5d.2xlarge",
                "r5d.4xlarge",
                "r5d.8xlarge",
                "r5d.12xlarge",
                "r5d.16xlarge",
                "r5d.24xlarge",
                "r5d.metal",
                "r5dn.large",
                "r5dn.xlarge",
                "r5dn.2xlarge",
                "r5dn.4xlarge",
                "r5dn.8xlarge",
                "r5dn.12xlarge",
                "r5dn.16xlarge",
                "r5dn.24xlarge",
                "r5dn.metal",
                "r5n.large",
                "r5n.xlarge",
                "r5n.2xlarge",
                "r5n.4xlarge",
                "r5n.8xlarge",
                "r5n.12xlarge",
                "r5n.16xlarge",
                "r5n.24xlarge",
                "r5n.metal",
                "r6g.medium",
                "r6g.large",
                "r6g.xlarge",
                "r6g.2xlarge",
                "r6g.4xlarge",
                "r6g.8xlarge",
                "r6g.12xlarge",
                "r6g.16xlarge",
                "r6g.metal",
                "r6gd.medium",
                "r6gd.large",
                "r6gd.xlarge",
                "r6gd.2xlarge",
                "r6gd.4xlarge",
                "r6gd.8xlarge",
                "r6gd.12xlarge",
                "r6gd.16xlarge",
                "r6gd.metal",
                "r6i.large",
                "r6i.xlarge",
                "r6i.2xlarge",
                "r6i.4xlarge",
                "r6i.8xlarge",
                "r6i.12xlarge",
                "r6i.16xlarge",
                "r6i.24xlarge",
                "r6i.32xlarge",
                "r6i.metal",
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "t3.nano",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "t3a.nano",
                "t3a.micro",
                "t3a.small",
                "t3a.medium",
                "t3a.large",
                "t3a.xlarge",
                "t3a.2xlarge",
                "t4g.nano",
                "t4g.micro",
                "t4g.small",
                "t4g.medium",
                "t4g.large",
                "t4g.xlarge",
                "t4g.2xlarge",
                "u-6tb1.56xlarge",
                "u-6tb1.112xlarge",
                "u-9tb1.112xlarge",
                "u-12tb1.112xlarge",
                "u-6tb1.metal",
                "u-9tb1.metal",
                "u-12tb1.metal",
                "u-18tb1.metal",
                "u-24tb1.metal",
                "vt1.3xlarge",
                "vt1.6xlarge",
                "vt1.24xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "x1e.xlarge",
                "x1e.2xlarge",
                "x1e.4xlarge",
                "x1e.8xlarge",
                "x1e.16xlarge",
                "x1e.32xlarge",
                "x2iezn.2xlarge",
                "x2iezn.4xlarge",
                "x2iezn.6xlarge",
                "x2iezn.8xlarge",
                "x2iezn.12xlarge",
                "x2iezn.metal",
                "x2gd.medium",
                "x2gd.large",
                "x2gd.xlarge",
                "x2gd.2xlarge",
                "x2gd.4xlarge",
                "x2gd.8xlarge",
                "x2gd.12xlarge",
                "x2gd.16xlarge",
                "x2gd.metal",
                "z1d.large",
                "z1d.xlarge",
                "z1d.2xlarge",
                "z1d.3xlarge",
                "z1d.6xlarge",
                "z1d.12xlarge",
                "z1d.metal",
                "x2idn.16xlarge",
                "x2idn.24xlarge",
                "x2idn.32xlarge",
                "x2iedn.xlarge",
                "x2iedn.2xlarge",
                "x2iedn.4xlarge",
                "x2iedn.8xlarge",
                "x2iedn.16xlarge",
                "x2iedn.24xlarge",
                "x2iedn.32xlarge",
                "c6a.large",
                "c6a.xlarge",
                "c6a.2xlarge",
                "c6a.4xlarge",
                "c6a.8xlarge",
                "c6a.12xlarge",
                "c6a.16xlarge",
                "c6a.24xlarge",
                "c6a.32xlarge",
                "c6a.48xlarge",
                "c6a.metal",
                "m6a.metal",
                "i4i.large",
                "i4i.xlarge",
                "i4i.2xlarge",
                "i4i.4xlarge",
                "i4i.8xlarge",
                "i4i.16xlarge",
                "i4i.32xlarge",
                "i4i.metal",
                "x2idn.metal",
                "x2iedn.metal",
                "c7g.medium",
                "c7g.large",
                "c7g.xlarge",
                "c7g.2xlarge",
                "c7g.4xlarge",
                "c7g.8xlarge",
                "c7g.12xlarge",
                "c7g.16xlarge",
                "mac2.metal",
                "c6id.large",
                "c6id.xlarge",
                "c6id.2xlarge",
                "c6id.4xlarge",
                "c6id.8xlarge",
                "c6id.12xlarge",
                "c6id.16xlarge",
                "c6id.24xlarge",
                "c6id.32xlarge",
                "c6id.metal",
                "m6id.large",
                "m6id.xlarge",
                "m6id.2xlarge",
                "m6id.4xlarge",
                "m6id.8xlarge",
                "m6id.12xlarge",
                "m6id.16xlarge",
                "m6id.24xlarge",
                "m6id.32xlarge",
                "m6id.metal",
                "r6id.large",
                "r6id.xlarge",
                "r6id.2xlarge",
                "r6id.4xlarge",
                "r6id.8xlarge",
                "r6id.12xlarge",
                "r6id.16xlarge",
                "r6id.24xlarge",
                "r6id.32xlarge",
                "r6id.metal",
                "r6a.large",
                "r6a.xlarge",
                "r6a.2xlarge",
                "r6a.4xlarge",
                "r6a.8xlarge",
                "r6a.12xlarge",
                "r6a.16xlarge",
                "r6a.24xlarge",
                "r6a.32xlarge",
                "r6a.48xlarge",
                "r6a.metal",
                "p4de.24xlarge",
                "u-3tb1.56xlarge",
                "u-18tb1.112xlarge",
                "u-24tb1.112xlarge",
                "trn1.2xlarge",
                "trn1.32xlarge",
                "hpc6id.32xlarge",
                "c6in.large",
                "c6in.xlarge",
                "c6in.2xlarge",
                "c6in.4xlarge",
                "c6in.8xlarge",
                "c6in.12xlarge",
                "c6in.16xlarge",
                "c6in.24xlarge",
                "c6in.32xlarge",
                "m6in.large",
                "m6in.xlarge",
                "m6in.2xlarge",
                "m6in.4xlarge",
                "m6in.8xlarge",
                "m6in.12xlarge",
                "m6in.16xlarge",
                "m6in.24xlarge",
                "m6in.32xlarge",
                "m6idn.large",
                "m6idn.xlarge",
                "m6idn.2xlarge",
                "m6idn.4xlarge",
                "m6idn.8xlarge",
                "m6idn.12xlarge",
                "m6idn.16xlarge",
                "m6idn.24xlarge",
                "m6idn.32xlarge",
                "r6in.large",
                "r6in.xlarge",
                "r6in.2xlarge",
                "r6in.4xlarge",
                "r6in.8xlarge",
                "r6in.12xlarge",
                "r6in.16xlarge",
                "r6in.24xlarge",
                "r6in.32xlarge",
                "r6idn.large",
                "r6idn.xlarge",
                "r6idn.2xlarge",
                "r6idn.4xlarge",
                "r6idn.8xlarge",
                "r6idn.12xlarge",
                "r6idn.16xlarge",
                "r6idn.24xlarge",
                "r6idn.32xlarge",
                "c7g.metal",
                "m7g.medium",
                "m7g.large",
                "m7g.xlarge",
                "m7g.2xlarge",
                "m7g.4xlarge",
                "m7g.8xlarge",
                "m7g.12xlarge",
                "m7g.16xlarge",
                "m7g.metal",
                "r7g.medium",
                "r7g.large",
                "r7g.xlarge",
                "r7g.2xlarge",
                "r7g.4xlarge",
                "r7g.8xlarge",
                "r7g.12xlarge",
                "r7g.16xlarge",
                "r7g.metal",
                "c6in.metal",
                "m6in.metal",
                "m6idn.metal",
                "r6in.metal",
                "r6idn.metal",
                "inf2.xlarge",
                "inf2.8xlarge",
                "inf2.24xlarge",
                "inf2.48xlarge",
                "trn1n.32xlarge",
                "i4g.large",
                "i4g.xlarge",
                "i4g.2xlarge",
                "i4g.4xlarge",
                "i4g.8xlarge",
                "i4g.16xlarge",
                "hpc7g.4xlarge",
                "hpc7g.8xlarge",
                "hpc7g.16xlarge",
                "c7gn.medium",
                "c7gn.large",
                "c7gn.xlarge",
                "c7gn.2xlarge",
                "c7gn.4xlarge",
                "c7gn.8xlarge",
                "c7gn.12xlarge",
                "c7gn.16xlarge",
                "p5.48xlarge",
                "m7i.large",
                "m7i.xlarge",
                "m7i.2xlarge",
                "m7i.4xlarge",
                "m7i.8xlarge",
                "m7i.12xlarge",
                "m7i.16xlarge",
                "m7i.24xlarge",
                "m7i.48xlarge",
                "m7i-flex.large",
                "m7i-flex.xlarge",
                "m7i-flex.2xlarge",
                "m7i-flex.4xlarge",
                "m7i-flex.8xlarge",
                "m7a.medium",
                "m7a.large",
                "m7a.xlarge",
                "m7a.2xlarge",
                "m7a.4xlarge",
                "m7a.8xlarge",
                "m7a.12xlarge",
                "m7a.16xlarge",
                "m7a.24xlarge",
                "m7a.32xlarge",
                "m7a.48xlarge",
                "m7a.metal-48xl",
                "hpc7a.12xlarge",
                "hpc7a.24xlarge",
                "hpc7a.48xlarge",
                "hpc7a.96xlarge",
                "c7gd.medium",
                "c7gd.large",
                "c7gd.xlarge",
                "c7gd.2xlarge",
                "c7gd.4xlarge",
                "c7gd.8xlarge",
                "c7gd.12xlarge",
                "c7gd.16xlarge",
                "m7gd.medium",
                "m7gd.large",
                "m7gd.xlarge",
                "m7gd.2xlarge",
                "m7gd.4xlarge",
                "m7gd.8xlarge",
                "m7gd.12xlarge",
                "m7gd.16xlarge",
                "r7gd.medium",
                "r7gd.large",
                "r7gd.xlarge",
                "r7gd.2xlarge",
                "r7gd.4xlarge",
                "r7gd.8xlarge",
                "r7gd.12xlarge",
                "r7gd.16xlarge",
                "r7a.medium",
                "r7a.large",
                "r7a.xlarge",
                "r7a.2xlarge",
                "r7a.4xlarge",
                "r7a.8xlarge",
                "r7a.12xlarge",
                "r7a.16xlarge",
                "r7a.24xlarge",
                "r7a.32xlarge",
                "r7a.48xlarge",
                "c7i.large",
                "c7i.xlarge",
                "c7i.2xlarge",
                "c7i.4xlarge",
                "c7i.8xlarge",
                "c7i.12xlarge",
                "c7i.16xlarge",
                "c7i.24xlarge",
                "c7i.48xlarge",
                "mac2-m2pro.metal",
                "r7iz.large",
                "r7iz.xlarge",
                "r7iz.2xlarge",
                "r7iz.4xlarge",
                "r7iz.8xlarge",
                "r7iz.12xlarge",
                "r7iz.16xlarge",
                "r7iz.32xlarge",
                "c7a.medium",
                "c7a.large",
                "c7a.xlarge",
                "c7a.2xlarge",
                "c7a.4xlarge",
                "c7a.8xlarge",
                "c7a.12xlarge",
                "c7a.16xlarge",
                "c7a.24xlarge",
                "c7a.32xlarge",
                "c7a.48xlarge",
                "c7a.metal-48xl",
                "r7a.metal-48xl",
                "r7i.large",
                "r7i.xlarge",
                "r7i.2xlarge",
                "r7i.4xlarge",
                "r7i.8xlarge",
                "r7i.12xlarge",
                "r7i.16xlarge",
                "r7i.24xlarge",
                "r7i.48xlarge",
                "dl2q.24xlarge",
                "mac2-m2.metal",
                "i4i.12xlarge",
                "i4i.24xlarge",
                "c7i.metal-24xl",
                "c7i.metal-48xl",
                "m7i.metal-24xl",
                "m7i.metal-48xl",
                "r7i.metal-24xl",
                "r7i.metal-48xl",
                "r7iz.metal-16xl",
                "r7iz.metal-32xl",
                "c7gd.metal",
                "m7gd.metal",
                "r7gd.metal",
                "g6.xlarge",
                "g6.2xlarge",
                "g6.4xlarge",
                "g6.8xlarge",
                "g6.12xlarge",
                "g6.16xlarge",
                "g6.24xlarge",
                "g6.48xlarge",
                "gr6.4xlarge",
                "gr6.8xlarge",
                "c7i-flex.large",
                "c7i-flex.xlarge",
                "c7i-flex.2xlarge",
                "c7i-flex.4xlarge",
                "c7i-flex.8xlarge",
                "u7i-12tb.224xlarge",
                "u7in-16tb.224xlarge",
                "u7in-24tb.224xlarge",
                "u7in-32tb.224xlarge",
                "u7ib-12tb.224xlarge",
                "c7gn.metal",
                "r8g.medium",
                "r8g.large",
                "r8g.xlarge",
                "r8g.2xlarge",
                "r8g.4xlarge",
                "r8g.8xlarge",
                "r8g.12xlarge",
                "r8g.16xlarge",
                "r8g.24xlarge",
                "r8g.48xlarge",
                "r8g.metal-24xl",
                "r8g.metal-48xl",
                "mac2-m1ultra.metal"
            ],
            "x-enum-varnames": [
                "InstanceTypeA1Medium",
                "InstanceTypeA1Large",
                "InstanceTypeA1Xlarge",
                "InstanceTypeA12xlarge",
                "InstanceTypeA14xlarge",
                "InstanceTypeA1Metal",
                "InstanceTypeC1Medium",
                "InstanceTypeC1Xlarge",
                "InstanceTypeC3Large",
                "InstanceTypeC3Xlarge",
                "InstanceTypeC32xlarge",
                "InstanceTypeC34xlarge",
                "InstanceTypeC38xlarge",
                "InstanceTypeC4Large",
                "InstanceTypeC4Xlarge",
                "InstanceTypeC42xlarge",
                "InstanceTypeC44xlarge",
                "InstanceTypeC48xlarge",
                "InstanceTypeC5Large",
                "InstanceTypeC5Xlarge",
                "InstanceTypeC52xlarge",
                "InstanceTypeC54xlarge",
                "InstanceTypeC59xlarge",
                "InstanceTypeC512xlarge",
                "InstanceTypeC518xlarge",
                "InstanceTypeC524xlarge",
                "InstanceTypeC5Metal",
                "InstanceTypeC5aLarge",
                "InstanceTypeC5aXlarge",
                "InstanceTypeC5a2xlarge",
                "InstanceTypeC5a4xlarge",
                "InstanceTypeC5a8xlarge",
                "InstanceTypeC5a12xlarge",
                "InstanceTypeC5a16xlarge",
                "InstanceTypeC5a24xlarge",
                "InstanceTypeC5adLarge",
                "InstanceTypeC5adXlarge",
                "InstanceTypeC5ad2xlarge",
                "InstanceTypeC5ad4xlarge",
                "InstanceTypeC5ad8xlarge",
                "InstanceTypeC5ad12xlarge",
                "InstanceTypeC5ad16xlarge",
                "InstanceTypeC5ad24xlarge",
                "InstanceTypeC5dLarge",
                "InstanceTypeC5dXlarge",
                "InstanceTypeC5d2xlarge",
                "InstanceTypeC5d4xlarge",
                "InstanceTypeC5d9xlarge",
                "InstanceTypeC5d12xlarge",
                "InstanceTypeC5d18xlarge",
                "InstanceTypeC5d24xlarge",
                "InstanceTypeC5dMetal",
                "InstanceTypeC5nLarge",
                "InstanceTypeC5nXlarge",
                "InstanceTypeC5n2xlarge",
                "InstanceTypeC5n4xlarge",
                "InstanceTypeC5n9xlarge",
                "InstanceTypeC5n18xlarge",
                "InstanceTypeC5nMetal",
                "InstanceTypeC6gMedium",
                "InstanceTypeC6gLarge",
                "InstanceTypeC6gXlarge",
                "InstanceTypeC6g2xlarge",
                "InstanceTypeC6g4xlarge",
                "InstanceTypeC6g8xlarge",
                "InstanceTypeC6g12xlarge",
                "InstanceTypeC6g16xlarge",
                "InstanceTypeC6gMetal",
                "InstanceTypeC6gdMedium",
                "InstanceTypeC6gdLarge",
                "InstanceTypeC6gdXlarge",
                "InstanceTypeC6gd2xlarge",
                "InstanceTypeC6gd4xlarge",
                "InstanceTypeC6gd8xlarge",
                "InstanceTypeC6gd12xlarge",
                "InstanceTypeC6gd16xlarge",
                "InstanceTypeC6gdMetal",
                "InstanceTypeC6gnMedium",
                "InstanceTypeC6gnLarge",
                "InstanceTypeC6gnXlarge",
                "InstanceTypeC6gn2xlarge",
                "InstanceTypeC6gn4xlarge",
                "InstanceTypeC6gn8xlarge",
                "InstanceTypeC6gn12xlarge",
                "InstanceTypeC6gn16xlarge",
                "InstanceTypeC6iLarge",
                "InstanceTypeC6iXlarge",
                "InstanceTypeC6i2xlarge",
                "InstanceTypeC6i4xlarge",
                "InstanceTypeC6i8xlarge",
                "InstanceTypeC6i12xlarge",
                "InstanceTypeC6i16xlarge",
                "InstanceTypeC6i24xlarge",
                "InstanceTypeC6i32xlarge",
                "InstanceTypeC6iMetal",
                "InstanceTypeCc14xlarge",
                "InstanceTypeCc28xlarge",
                "InstanceTypeCg14xlarge",
                "InstanceTypeCr18xlarge",
                "InstanceTypeD2Xlarge",
                "InstanceTypeD22xlarge",
                "InstanceTypeD24xlarge",
                "InstanceTypeD28xlarge",
                "InstanceTypeD3Xlarge",
                "InstanceTypeD32xlarge",
                "InstanceTypeD34xlarge",
                "InstanceTypeD38xlarge",
                "InstanceTypeD3enXlarge",
                "InstanceTypeD3en2xlarge",
                "InstanceTypeD3en4xlarge",
                "InstanceTypeD3en6xlarge",
                "InstanceTypeD3en8xlarge",
                "InstanceTypeD3en12xlarge",
                "InstanceTypeDl124xlarge",
                "InstanceTypeF12xlarge",
                "InstanceTypeF14xlarge",
                "InstanceTypeF116xlarge",
                "InstanceTypeG22xlarge",
                "InstanceTypeG28xlarge",
                "InstanceTypeG34xlarge",
                "InstanceTypeG38xlarge",
                "InstanceTypeG316xlarge",
                "InstanceTypeG3sXlarge",
                "InstanceTypeG4adXlarge",
                "InstanceTypeG4ad2xlarge",
                "InstanceTypeG4ad4xlarge",
                "InstanceTypeG4ad8xlarge",
                "InstanceTypeG4ad16xlarge",
                "InstanceTypeG4dnXlarge",
                "InstanceTypeG4dn2xlarge",
                "InstanceTypeG4dn4xlarge",
                "InstanceTypeG4dn8xlarge",
                "InstanceTypeG4dn12xlarge",
                "InstanceTypeG4dn16xlarge",
                "InstanceTypeG4dnMetal",
                "InstanceTypeG5Xlarge",
                "InstanceTypeG52xlarge",
                "InstanceTypeG54xlarge",
                "InstanceTypeG58xlarge",
                "InstanceTypeG512xlarge",
                "InstanceTypeG516xlarge",
                "InstanceTypeG524xlarge",
                "InstanceTypeG548xlarge",
                "InstanceTypeG5gXlarge",
                "InstanceTypeG5g2xlarge",
                "InstanceTypeG5g4xlarge",
                "InstanceTypeG5g8xlarge",
                "InstanceTypeG5g16xlarge",
                "InstanceTypeG5gMetal",
                "InstanceTypeHi14xlarge",
                "InstanceTypeHpc6a48xlarge",
                "InstanceTypeHs18xlarge",
                "InstanceTypeH12xlarge",
                "InstanceTypeH14xlarge",
                "InstanceTypeH18xlarge",
                "InstanceTypeH116xlarge",
                "InstanceTypeI2Xlarge",
                "InstanceTypeI22xlarge",
                "InstanceTypeI24xlarge",
                "InstanceTypeI28xlarge",
                "InstanceTypeI3Large",
                "InstanceTypeI3Xlarge",
                "InstanceTypeI32xlarge",
                "InstanceTypeI34xlarge",
                "InstanceTypeI38xlarge",
                "InstanceTypeI316xlarge",
                "InstanceTypeI3Metal",
                "InstanceTypeI3enLarge",
                "InstanceTypeI3enXlarge",
                "InstanceTypeI3en2xlarge",
                "InstanceTypeI3en3xlarge",
                "InstanceTypeI3en6xlarge",
                "InstanceTypeI3en12xlarge",
                "InstanceTypeI3en24xlarge",
                "InstanceTypeI3enMetal",
                "InstanceTypeIm4gnLarge",
                "InstanceTypeIm4gnXlarge",
                "InstanceTypeIm4gn2xlarge",
                "InstanceTypeIm4gn4xlarge",
                "InstanceTypeIm4gn8xlarge",
                "InstanceTypeIm4gn16xlarge",
                "InstanceTypeInf1Xlarge",
                "InstanceTypeInf12xlarge",
                "InstanceTypeInf16xlarge",
                "InstanceTypeInf124xlarge",
                "InstanceTypeIs4genMedium",
                "InstanceTypeIs4genLarge",
                "InstanceTypeIs4genXlarge",
                "InstanceTypeIs4gen2xlarge",
                "InstanceTypeIs4gen4xlarge",
                "InstanceTypeIs4gen8xlarge",
                "InstanceTypeM1Small",
                "InstanceTypeM1Medium",
                "InstanceTypeM1Large",
                "InstanceTypeM1Xlarge",
                "InstanceTypeM2Xlarge",
                "InstanceTypeM22xlarge",
                "InstanceTypeM24xlarge",
                "InstanceTypeM3Medium",
                "InstanceTypeM3Large",
                "InstanceTypeM3Xlarge",
                "InstanceTypeM32xlarge",
                "InstanceTypeM4Large",
                "InstanceTypeM4Xlarge",
                "InstanceTypeM42xlarge",
                "InstanceTypeM44xlarge",
                "InstanceTypeM410xlarge",
                "InstanceTypeM416xlarge",
                "InstanceTypeM5Large",
                "InstanceTypeM5Xlarge",
                "InstanceTypeM52xlarge",
                "InstanceTypeM54xlarge",
                "InstanceTypeM58xlarge",
                "InstanceTypeM512xlarge",
                "InstanceTypeM516xlarge",
                "InstanceTypeM524xlarge",
                "InstanceTypeM5Metal",
                "InstanceTypeM5aLarge",
                "InstanceTypeM5aXlarge",
                "InstanceTypeM5a2xlarge",
                "InstanceTypeM5a4xlarge",
                "InstanceTypeM5a8xlarge",
                "InstanceTypeM5a12xlarge",
                "InstanceTypeM5a16xlarge",
                "InstanceTypeM5a24xlarge",
                "InstanceTypeM5adLarge",
                "InstanceTypeM5adXlarge",
                "InstanceTypeM5ad2xlarge",
                "InstanceTypeM5ad4xlarge",
                "InstanceTypeM5ad8xlarge",
                "InstanceTypeM5ad12xlarge",
                "InstanceTypeM5ad16xlarge",
                "InstanceTypeM5ad24xlarge",
                "InstanceTypeM5dLarge",
                "InstanceTypeM5dXlarge",
                "InstanceTypeM5d2xlarge",
                "InstanceTypeM5d4xlarge",
                "InstanceTypeM5d8xlarge",
                "InstanceTypeM5d12xlarge",
                "InstanceTypeM5d16xlarge",
                "InstanceTypeM5d24xlarge",
                "InstanceTypeM5dMetal",
                "InstanceTypeM5dnLarge",
                "InstanceTypeM5dnXlarge",
                "InstanceTypeM5dn2xlarge",
                "InstanceTypeM5dn4xlarge",
                "InstanceTypeM5dn8xlarge",
                "InstanceTypeM5dn12xlarge",
                "InstanceTypeM5dn16xlarge",
                "InstanceTypeM5dn24xlarge",
                "InstanceTypeM5dnMetal",
                "InstanceTypeM5nLarge",
                "InstanceTypeM5nXlarge",
                "InstanceTypeM5n2xlarge",
                "InstanceTypeM5n4xlarge",
                "InstanceTypeM5n8xlarge",
                "InstanceTypeM5n12xlarge",
                "InstanceTypeM5n16xlarge",
                "InstanceTypeM5n24xlarge",
                "InstanceTypeM5nMetal",
                "InstanceTypeM5znLarge",
                "InstanceTypeM5znXlarge",
                "InstanceTypeM5zn2xlarge",
                "InstanceTypeM5zn3xlarge",
                "InstanceTypeM5zn6xlarge",
                "InstanceTypeM5zn12xlarge",
                "InstanceTypeM5znMetal",
                "InstanceTypeM6aLarge",
                "InstanceTypeM6aXlarge",
                "InstanceTypeM6a2xlarge",
                "InstanceTypeM6a4xlarge",
                "InstanceTypeM6a8xlarge",
                "InstanceTypeM6a12xlarge",
                "InstanceTypeM6a16xlarge",
                "InstanceTypeM6a24xlarge",
                "InstanceTypeM6a32xlarge",
                "InstanceTypeM6a48xlarge",
                "InstanceTypeM6gMetal",
                "InstanceTypeM6gMedium",
                "InstanceTypeM6gLarge",
                "InstanceTypeM6gXlarge",
                "InstanceTypeM6g2xlarge",
                "InstanceTypeM6g4xlarge",
                "InstanceTypeM6g8xlarge",
                "InstanceTypeM6g12xlarge",
                "InstanceTypeM6g16xlarge",
                "InstanceTypeM6gdMetal",
                "InstanceTypeM6gdMedium",
                "InstanceTypeM6gdLarge",
                "InstanceTypeM6gdXlarge",
                "InstanceTypeM6gd2xlarge",
                "InstanceTypeM6gd4xlarge",
                "InstanceTypeM6gd8xlarge",
                "InstanceTypeM6gd12xlarge",
                "InstanceTypeM6gd16xlarge",
                "InstanceTypeM6iLarge",
                "InstanceTypeM6iXlarge",
                "InstanceTypeM6i2xlarge",
                "InstanceTypeM6i4xlarge",
                "InstanceTypeM6i8xlarge",
                "InstanceTypeM6i12xlarge",
                "InstanceTypeM6i16xlarge",
                "InstanceTypeM6i24xlarge",
                "InstanceTypeM6i32xlarge",
                "InstanceTypeM6iMetal",
                "InstanceTypeMac1Metal",
                "InstanceTypeP2Xlarge",
                "InstanceTypeP28xlarge",
                "InstanceTypeP216xlarge",
                "InstanceTypeP32xlarge",
                "InstanceTypeP38xlarge",
                "InstanceTypeP316xlarge",
                "InstanceTypeP3dn24xlarge",
                "InstanceTypeP4d24xlarge",
                "InstanceTypeR3Large",
                "InstanceTypeR3Xlarge",
                "InstanceTypeR32xlarge",
                "InstanceTypeR34xlarge",
                "InstanceTypeR38xlarge",
                "InstanceTypeR4Large",
                "InstanceTypeR4Xlarge",
                "InstanceTypeR42xlarge",
                "InstanceTypeR44xlarge",
                "InstanceTypeR48xlarge",
                "InstanceTypeR416xlarge",
                "InstanceTypeR5Large",
                "InstanceTypeR5Xlarge",
                "InstanceTypeR52xlarge",
                "InstanceTypeR54xlarge",
                "InstanceTypeR58xlarge",
                "InstanceTypeR512xlarge",
                "InstanceTypeR516xlarge",
                "InstanceTypeR524xlarge",
                "InstanceTypeR5Metal",
                "InstanceTypeR5aLarge",
                "InstanceTypeR5aXlarge",
                "InstanceTypeR5a2xlarge",
                "InstanceTypeR5a4xlarge",
                "InstanceTypeR5a8xlarge",
                "InstanceTypeR5a12xlarge",
                "InstanceTypeR5a16xlarge",
                "InstanceTypeR5a24xlarge",
                "InstanceTypeR5adLarge",
                "InstanceTypeR5adXlarge",
                "InstanceTypeR5ad2xlarge",
                "InstanceTypeR5ad4xlarge",
                "InstanceTypeR5ad8xlarge",
                "InstanceTypeR5ad12xlarge",
                "InstanceTypeR5ad16xlarge",
                "InstanceTypeR5ad24xlarge",
                "InstanceTypeR5bLarge",
                "InstanceTypeR5bXlarge",
                "InstanceTypeR5b2xlarge",
                "InstanceTypeR5b4xlarge",
                "InstanceTypeR5b8xlarge",
                "InstanceTypeR5b12xlarge",
                "InstanceTypeR5b16xlarge",
                "InstanceTypeR5b24xlarge",
                "InstanceTypeR5bMetal",
                "InstanceTypeR5dLarge",
                "InstanceTypeR5dXlarge",
                "InstanceTypeR5d2xlarge",
                "InstanceTypeR5d4xlarge",
                "InstanceTypeR5d8xlarge",
                "InstanceTypeR5d12xlarge",
                "InstanceTypeR5d16xlarge",
                "InstanceTypeR5d24xlarge",
                "InstanceTypeR5dMetal",
                "InstanceTypeR5dnLarge",
                "InstanceTypeR5dnXlarge",
                "InstanceTypeR5dn2xlarge",
                "InstanceTypeR5dn4xlarge",
                "InstanceTypeR5dn8xlarge",
                "InstanceTypeR5dn12xlarge",
                "InstanceTypeR5dn16xlarge",
                "InstanceTypeR5dn24xlarge",
                "InstanceTypeR5dnMetal",
                "InstanceTypeR5nLarge",
                "InstanceTypeR5nXlarge",
                "InstanceTypeR5n2xlarge",
                "InstanceTypeR5n4xlarge",
                "InstanceTypeR5n8xlarge",
                "InstanceTypeR5n12xlarge",
                "InstanceTypeR5n16xlarge",
                "InstanceTypeR5n24xlarge",
                "InstanceTypeR5nMetal",
                "InstanceTypeR6gMedium",
                "InstanceTypeR6gLarge",
                "InstanceTypeR6gXlarge",
                "InstanceTypeR6g2xlarge",
                "InstanceTypeR6g4xlarge",
                "InstanceTypeR6g8xlarge",
                "InstanceTypeR6g12xlarge",
                "InstanceTypeR6g16xlarge",
                "InstanceTypeR6gMetal",
                "InstanceTypeR6gdMedium",
                "InstanceTypeR6gdLarge",
                "InstanceTypeR6gdXlarge",
                "InstanceTypeR6gd2xlarge",
                "InstanceTypeR6gd4xlarge",
                "InstanceTypeR6gd8xlarge",
                "InstanceTypeR6gd12xlarge",
                "InstanceTypeR6gd16xlarge",
                "InstanceTypeR6gdMetal",
                "InstanceTypeR6iLarge",
                "InstanceTypeR6iXlarge",
                "InstanceTypeR6i2xlarge",
                "InstanceTypeR6i4xlarge",
                "InstanceTypeR6i8xlarge",
                "InstanceTypeR6i12xlarge",
                "InstanceTypeR6i16xlarge",
                "InstanceTypeR6i24xlarge",
                "InstanceTypeR6i32xlarge",
                "InstanceTypeR6iMetal",
                "InstanceTypeT1Micro",
                "InstanceTypeT2Nano",
                "InstanceTypeT2Micro",
                "InstanceTypeT2Small",
                "InstanceTypeT2Medium",
                "InstanceTypeT2Large",
                "InstanceTypeT2Xlarge",
                "InstanceTypeT22xlarge",
                "InstanceTypeT3Nano",
                "InstanceTypeT3Micro",
                "InstanceTypeT3Small",
                "InstanceTypeT3Medium",
                "InstanceTypeT3Large",
                "InstanceTypeT3Xlarge",
                "InstanceTypeT32xlarge",
                "InstanceTypeT3aNano",
                "InstanceTypeT3aMicro",
                "InstanceTypeT3aSmall",
                "InstanceTypeT3aMedium",
                "InstanceTypeT3aLarge",
                "InstanceTypeT3aXlarge",
                "InstanceTypeT3a2xlarge",
                "InstanceTypeT4gNano",
                "InstanceTypeT4gMicro",
                "InstanceTypeT4gSmall",
                "InstanceTypeT4gMedium",
                "InstanceTypeT4gLarge",
                "InstanceTypeT4gXlarge",
                "InstanceTypeT4g2xlarge",
                "InstanceTypeU6tb156xlarge",
                "InstanceTypeU6tb1112xlarge",
                "InstanceTypeU9tb1112xlarge",
                "InstanceTypeU12tb1112xlarge",
                "InstanceTypeU6tb1Metal",
                "InstanceTypeU9tb1Metal",
                "InstanceTypeU12tb1Metal",
                "InstanceTypeU18tb1Metal",
                "InstanceTypeU24tb1Metal",
                "InstanceTypeVt13xlarge",
                "InstanceTypeVt16xlarge",
                "InstanceTypeVt124xlarge",
                "InstanceTypeX116xlarge",
                "InstanceTypeX132xlarge",
                "InstanceTypeX1eXlarge",
                "InstanceTypeX1e2xlarge",
                "InstanceTypeX1e4xlarge",
                "InstanceTypeX1e8xlarge",
                "InstanceTypeX1e16xlarge",
                "InstanceTypeX1e32xlarge",
                "InstanceTypeX2iezn2xlarge",
                "InstanceTypeX2iezn4xlarge",
                "InstanceTypeX2iezn6xlarge",
                "InstanceTypeX2iezn8xlarge",
                "InstanceTypeX2iezn12xlarge",
                "InstanceTypeX2ieznMetal",
                "InstanceTypeX2gdMedium",
                "InstanceTypeX2gdLarge",
                "InstanceTypeX2gdXlarge",
                "InstanceTypeX2gd2xlarge",
                "InstanceTypeX2gd4xlarge",
                "InstanceTypeX2gd8xlarge",
                "InstanceTypeX2gd12xlarge",
                "InstanceTypeX2gd16xlarge",
                "InstanceTypeX2gdMetal",
                "InstanceTypeZ1dLarge",
                "InstanceTypeZ1dXlarge",
                "InstanceTypeZ1d2xlarge",
                "InstanceTypeZ1d3xlarge",
                "InstanceTypeZ1d6xlarge",
                "InstanceTypeZ1d12xlarge",
                "InstanceTypeZ1dMetal",
                "InstanceTypeX2idn16xlarge",
                "InstanceTypeX2idn24xlarge",
                "InstanceTypeX2idn32xlarge",
                "InstanceTypeX2iednXlarge",
                "InstanceTypeX2iedn2xlarge",
                "InstanceTypeX2iedn4xlarge",
                "InstanceTypeX2iedn8xlarge",
                "InstanceTypeX2iedn16xlarge",
                "InstanceTypeX2iedn24xlarge",
                "InstanceTypeX2iedn32xlarge",
                "InstanceTypeC6aLarge",
                "InstanceTypeC6aXlarge",
                "InstanceTypeC6a2xlarge",
                "InstanceTypeC6a4xlarge",
                "InstanceTypeC6a8xlarge",
                "InstanceTypeC6a12xlarge",
                "InstanceTypeC6a16xlarge",
                "InstanceTypeC6a24xlarge",
                "InstanceTypeC6a32xlarge",
                "InstanceTypeC6a48xlarge",
                "InstanceTypeC6aMetal",
                "InstanceTypeM6aMetal",
                "InstanceTypeI4iLarge",
                "InstanceTypeI4iXlarge",
                "InstanceTypeI4i2xlarge",
                "InstanceTypeI4i4xlarge",
                "InstanceTypeI4i8xlarge",
                "InstanceTypeI4i16xlarge",
                "InstanceTypeI4i32xlarge",
                "InstanceTypeI4iMetal",
                "InstanceTypeX2idnMetal",
                "InstanceTypeX2iednMetal",
                "InstanceTypeC7gMedium",
                "InstanceTypeC7gLarge",
                "InstanceTypeC7gXlarge",
                "InstanceTypeC7g2xlarge",
                "InstanceTypeC7g4xlarge",
                "InstanceTypeC7g8xlarge",
                "InstanceTypeC7g12xlarge",
                "InstanceTypeC7g16xlarge",
                "InstanceTypeMac2Metal",
                "InstanceTypeC6idLarge",
                "InstanceTypeC6idXlarge",
                "InstanceTypeC6id2xlarge",
                "InstanceTypeC6id4xlarge",
                "InstanceTypeC6id8xlarge",
                "InstanceTypeC6id12xlarge",
                "InstanceTypeC6id16xlarge",
                "InstanceTypeC6id24xlarge",
                "InstanceTypeC6id32xlarge",
                "InstanceTypeC6idMetal",
                "InstanceTypeM6idLarge",
                "InstanceTypeM6idXlarge",
                "InstanceTypeM6id2xlarge",
                "InstanceTypeM6id4xlarge",
                "InstanceTypeM6id8xlarge",
                "InstanceTypeM6id12xlarge",
                "InstanceTypeM6id16xlarge",
                "InstanceTypeM6id24xlarge",
                "InstanceTypeM6id32xlarge",
                "InstanceTypeM6idMetal",
                "InstanceTypeR6idLarge",
                "InstanceTypeR6idXlarge",
                "InstanceTypeR6id2xlarge",
                "InstanceTypeR6id4xlarge",
                "InstanceTypeR6id8xlarge",
                "InstanceTypeR6id12xlarge",
                "InstanceTypeR6id16xlarge",
                "InstanceTypeR6id24xlarge",
                "InstanceTypeR6id32xlarge",
                "InstanceTypeR6idMetal",
                "InstanceTypeR6aLarge",
                "InstanceTypeR6aXlarge",
                "InstanceTypeR6a2xlarge",
                "InstanceTypeR6a4xlarge",
                "InstanceTypeR6a8xlarge",
                "InstanceTypeR6a12xlarge",
                "InstanceTypeR6a16xlarge",
                "InstanceTypeR6a24xlarge",
                "InstanceTypeR6a32xlarge",
                "InstanceTypeR6a48xlarge",
                "InstanceTypeR6aMetal",
                "InstanceTypeP4de24xlarge",
                "InstanceTypeU3tb156xlarge",
                "InstanceTypeU18tb1112xlarge",
                "InstanceTypeU24tb1112xlarge",
                "InstanceTypeTrn12xlarge",
                "InstanceTypeTrn132xlarge",
                "InstanceTypeHpc6id32xlarge",
                "InstanceTypeC6inLarge",
                "InstanceTypeC6inXlarge",
                "InstanceTypeC6in2xlarge",
                "InstanceTypeC6in4xlarge",
                "InstanceTypeC6in8xlarge",
                "InstanceTypeC6in12xlarge",
                "InstanceTypeC6in16xlarge",
                "InstanceTypeC6in24xlarge",
                "InstanceTypeC6in32xlarge",
                "InstanceTypeM6inLarge",
                "InstanceTypeM6inXlarge",
                "InstanceTypeM6in2xlarge",
                "InstanceTypeM6in4xlarge",
                "InstanceTypeM6in8xlarge",
                "InstanceTypeM6in12xlarge",
                "InstanceTypeM6in16xlarge",
                "InstanceTypeM6in24xlarge",
                "InstanceTypeM6in32xlarge",
                "InstanceTypeM6idnLarge",
                "InstanceTypeM6idnXlarge",
                "InstanceTypeM6idn2xlarge",
                "InstanceTypeM6idn4xlarge",
                "InstanceTypeM6idn8xlarge",
                "InstanceTypeM6idn12xlarge",
                "InstanceTypeM6idn16xlarge",
                "InstanceTypeM6idn24xlarge",
                "InstanceTypeM6idn32xlarge",
                "InstanceTypeR6inLarge",
                "InstanceTypeR6inXlarge",
                "InstanceTypeR6in2xlarge",
                "InstanceTypeR6in4xlarge",
                "InstanceTypeR6in8xlarge",
                "InstanceTypeR6in12xlarge",
                "InstanceTypeR6in16xlarge",
                "InstanceTypeR6in24xlarge",
                "InstanceTypeR6in32xlarge",
                "InstanceTypeR6idnLarge",
                "InstanceTypeR6idnXlarge",
                "InstanceTypeR6idn2xlarge",
                "InstanceTypeR6idn4xlarge",
                "InstanceTypeR6idn8xlarge",
                "InstanceTypeR6idn12xlarge",
                "InstanceTypeR6idn16xlarge",
                "InstanceTypeR6idn24xlarge",
                "InstanceTypeR6idn32xlarge",
                "InstanceTypeC7gMetal",
                "InstanceTypeM7gMedium",
                "InstanceTypeM7gLarge",
                "InstanceTypeM7gXlarge",
                "InstanceTypeM7g2xlarge",
                "InstanceTypeM7g4xlarge",
                "InstanceTypeM7g8xlarge",
                "InstanceTypeM7g12xlarge",
                "InstanceTypeM7g16xlarge",
                "InstanceTypeM7gMetal",
                "InstanceTypeR7gMedium",
                "InstanceTypeR7gLarge",
                "InstanceTypeR7gXlarge",
                "InstanceTypeR7g2xlarge",
                "InstanceTypeR7g4xlarge",
                "InstanceTypeR7g8xlarge",
                "InstanceTypeR7g12xlarge",
                "InstanceTypeR7g16xlarge",
                "InstanceTypeR7gMetal",
                "InstanceTypeC6inMetal",
                "InstanceTypeM6inMetal",
                "InstanceTypeM6idnMetal",
                "InstanceTypeR6inMetal",
                "InstanceTypeR6idnMetal",
                "InstanceTypeInf2Xlarge",
                "InstanceTypeInf28xlarge",
                "InstanceTypeInf224xlarge",
                "InstanceTypeInf248xlarge",
                "InstanceTypeTrn1n32xlarge",
                "InstanceTypeI4gLarge",
                "InstanceTypeI4gXlarge",
                "InstanceTypeI4g2xlarge",
                "InstanceTypeI4g4xlarge",
                "InstanceTypeI4g8xlarge",
                "InstanceTypeI4g16xlarge",
                "InstanceTypeHpc7g4xlarge",
                "InstanceTypeHpc7g8xlarge",
                "InstanceTypeHpc7g16xlarge",
                "InstanceTypeC7gnMedium",
                "InstanceTypeC7gnLarge",
                "InstanceTypeC7gnXlarge",
                "InstanceTypeC7gn2xlarge",
                "InstanceTypeC7gn4xlarge",
                "InstanceTypeC7gn8xlarge",
                "InstanceTypeC7gn12xlarge",
                "InstanceTypeC7gn16xlarge",
                "InstanceTypeP548xlarge",
                "InstanceTypeM7iLarge",
                "InstanceTypeM7iXlarge",
                "InstanceTypeM7i2xlarge",
                "InstanceTypeM7i4xlarge",
                "InstanceTypeM7i8xlarge",
                "InstanceTypeM7i12xlarge",
                "InstanceTypeM7i16xlarge",
                "InstanceTypeM7i24xlarge",
                "InstanceTypeM7i48xlarge",
                "InstanceTypeM7iFlexLarge",
                "InstanceTypeM7iFlexXlarge",
                "InstanceTypeM7iFlex2xlarge",
                "InstanceTypeM7iFlex4xlarge",
                "InstanceTypeM7iFlex8xlarge",
                "InstanceTypeM7aMedium",
                "InstanceTypeM7aLarge",
                "InstanceTypeM7aXlarge",
                "InstanceTypeM7a2xlarge",
                "InstanceTypeM7a4xlarge",
                "InstanceTypeM7a8xlarge",
                "InstanceTypeM7a12xlarge",
                "InstanceTypeM7a16xlarge",
                "InstanceTypeM7a24xlarge",
                "InstanceTypeM7a32xlarge",
                "InstanceTypeM7a48xlarge",
                "InstanceTypeM7aMetal48xl",
                "InstanceTypeHpc7a12xlarge",
                "InstanceTypeHpc7a24xlarge",
                "InstanceTypeHpc7a48xlarge",
                "InstanceTypeHpc7a96xlarge",
                "InstanceTypeC7gdMedium",
                "InstanceTypeC7gdLarge",
                "InstanceTypeC7gdXlarge",
                "InstanceTypeC7gd2xlarge",
                "InstanceTypeC7gd4xlarge",
                "InstanceTypeC7gd8xlarge",
                "InstanceTypeC7gd12xlarge",
                "InstanceTypeC7gd16xlarge",
                "InstanceTypeM7gdMedium",
                "InstanceTypeM7gdLarge",
                "InstanceTypeM7gdXlarge",
                "InstanceTypeM7gd2xlarge",
                "InstanceTypeM7gd4xlarge",
                "InstanceTypeM7gd8xlarge",
                "InstanceTypeM7gd12xlarge",
                "InstanceTypeM7gd16xlarge",
                "InstanceTypeR7gdMedium",
                "InstanceTypeR7gdLarge",
                "InstanceTypeR7gdXlarge",
                "InstanceTypeR7gd2xlarge",
                "InstanceTypeR7gd4xlarge",
                "InstanceTypeR7gd8xlarge",
                "InstanceTypeR7gd12xlarge",
                "InstanceTypeR7gd16xlarge",
                "InstanceTypeR7aMedium",
                "InstanceTypeR7aLarge",
                "InstanceTypeR7aXlarge",
                "InstanceTypeR7a2xlarge",
                "InstanceTypeR7a4xlarge",
                "InstanceTypeR7a8xlarge",
                "InstanceTypeR7a12xlarge",
                "InstanceTypeR7a16xlarge",
                "InstanceTypeR7a24xlarge",
                "InstanceTypeR7a32xlarge",
                "InstanceTypeR7a48xlarge",
                "InstanceTypeC7iLarge",
                "InstanceTypeC7iXlarge",
                "InstanceTypeC7i2xlarge",
                "InstanceTypeC7i4xlarge",
                "InstanceTypeC7i8xlarge",
                "InstanceTypeC7i12xlarge",
                "InstanceTypeC7i16xlarge",
                "InstanceTypeC7i24xlarge",
                "InstanceTypeC7i48xlarge",
                "InstanceTypeMac2M2proMetal",
                "InstanceTypeR7izLarge",
                "InstanceTypeR7izXlarge",
                "InstanceTypeR7iz2xlarge",
                "InstanceTypeR7iz4xlarge",
                "InstanceTypeR7iz8xlarge",
                "InstanceTypeR7iz12xlarge",
                "InstanceTypeR7iz16xlarge",
                "InstanceTypeR7iz32xlarge",
                "InstanceTypeC7aMedium",
                "InstanceTypeC7aLarge",
                "InstanceTypeC7aXlarge",
                "InstanceTypeC7a2xlarge",
                "InstanceTypeC7a4xlarge",
                "InstanceTypeC7a8xlarge",
                "InstanceTypeC7a12xlarge",
                "InstanceTypeC7a16xlarge",
                "InstanceTypeC7a24xlarge",
                "InstanceTypeC7a32xlarge",
                "InstanceTypeC7a48xlarge",
                "InstanceTypeC7aMetal48xl",
                "InstanceTypeR7aMetal48xl",
                "InstanceTypeR7iLarge",
                "InstanceTypeR7iXlarge",
                "InstanceTypeR7i2xlarge",
                "InstanceTypeR7i4xlarge",
                "InstanceTypeR7i8xlarge",
                "InstanceTypeR7i12xlarge",
                "InstanceTypeR7i16xlarge",
                "InstanceTypeR7i24xlarge",
                "InstanceTypeR7i48xlarge",
                "InstanceTypeDl2q24xlarge",
                "InstanceTypeMac2M2Metal",
                "InstanceTypeI4i12xlarge",
                "InstanceTypeI4i24xlarge",
                "InstanceTypeC7iMetal24xl",
                "InstanceTypeC7iMetal48xl",
                "InstanceTypeM7iMetal24xl",
                "InstanceTypeM7iMetal48xl",
                "InstanceTypeR7iMetal24xl",
                "InstanceTypeR7iMetal48xl",
                "InstanceTypeR7izMetal16xl",
                "InstanceTypeR7izMetal32xl",
                "InstanceTypeC7gdMetal",
                "InstanceTypeM7gdMetal",
                "InstanceTypeR7gdMetal",
                "InstanceTypeG6Xlarge",
                "InstanceTypeG62xlarge",
                "InstanceTypeG64xlarge",
                "InstanceTypeG68xlarge",
                "InstanceTypeG612xlarge",
                "InstanceTypeG616xlarge",
                "InstanceTypeG624xlarge",
                "InstanceTypeG648xlarge",
                "InstanceTypeGr64xlarge",
                "InstanceTypeGr68xlarge",
                "InstanceTypeC7iFlexLarge",
                "InstanceTypeC7iFlexXlarge",
                "InstanceTypeC7iFlex2xlarge",
                "InstanceTypeC7iFlex4xlarge",
                "InstanceTypeC7iFlex8xlarge",
                "InstanceTypeU7i12tb224xlarge",
                "InstanceTypeU7in16tb224xlarge",
                "InstanceTypeU7in24tb224xlarge",
                "InstanceTypeU7in32tb224xlarge",
                "InstanceTypeU7ib12tb224xlarge",
                "InstanceTypeC7gnMetal",
                "InstanceTypeR8gMedium",
                "InstanceTypeR8gLarge",
                "InstanceTypeR8gXlarge",
                "InstanceTypeR8g2xlarge",
                "InstanceTypeR8g4xlarge",
                "InstanceTypeR8g8xlarge",
                "InstanceTypeR8g12xlarge",
                "InstanceTypeR8g16xlarge",
                "InstanceTypeR8g24xlarge",
                "InstanceTypeR8g48xlarge",
                "InstanceTypeR8gMetal24xl",
                "InstanceTypeR8gMetal48xl",
                "InstanceTypeMac2M1ultraMetal"
            ]
        },
        "types.MonitoringState": {
            "type": "string",
            "enum": [
                "disabled",
                "disabling",
                "enabled",
                "pending"
            ],
            "x-enum-varnames": [
                "MonitoringStateDisabled",
                "MonitoringStateDisabling",
                "MonitoringStateEnabled",
                "MonitoringStatePending"
            ]
        },
        "types.SeverityResult": {
            "type": "object",
            "properties": {
                "criticalCount": {
                    "type": "integer",
                    "example": 1
                },
                "highCount": {
                    "type": "integer",
                    "example": 1
                },
                "lowCount": {
                    "type": "integer",
                    "example": 1
                },
                "mediumCount": {
                    "type": "integer",
                    "example": 1
                },
                "noneCount": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "types.SeverityResultV2": {
            "type": "object",
            "properties": {
                "critical": {
                    "type": "integer"
                },
                "high": {
                    "type": "integer"
                },
                "low": {
                    "type": "integer"
                },
                "medium": {
                    "type": "integer"
                },
                "none": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.StandardUnit": {
            "type": "string",
            "enum": [
                "Seconds",
                "Microseconds",
                "Milliseconds",
                "Bytes",
                "Kilobytes",
                "Megabytes",
                "Gigabytes",
                "Terabytes",
                "Bits",
                "Kilobits",
                "Megabits",
                "Gigabits",
                "Terabits",
                "Percent",
                "Count",
                "Bytes/Second",
                "Kilobytes/Second",
                "Megabytes/Second",
                "Gigabytes/Second",
                "Terabytes/Second",
                "Bits/Second",
                "Kilobits/Second",
                "Megabits/Second",
                "Gigabits/Second",
                "Terabits/Second",
                "Count/Second",
                "None"
            ],
            "x-enum-varnames": [
                "StandardUnitSeconds",
                "StandardUnitMicroseconds",
                "StandardUnitMilliseconds",
                "StandardUnitBytes",
                "StandardUnitKilobytes",
                "StandardUnitMegabytes",
                "StandardUnitGigabytes",
                "StandardUnitTerabytes",
                "StandardUnitBits",
                "StandardUnitKilobits",
                "StandardUnitMegabits",
                "StandardUnitGigabits",
                "StandardUnitTerabits",
                "StandardUnitPercent",
                "StandardUnitCount",
                "StandardUnitBytesSecond",
                "StandardUnitKilobytesSecond",
                "StandardUnitMegabytesSecond",
                "StandardUnitGigabytesSecond",
                "StandardUnitTerabytesSecond",
                "StandardUnitBitsSecond",
                "StandardUnitKilobitsSecond",
                "StandardUnitMegabitsSecond",
                "StandardUnitGigabitsSecond",
                "StandardUnitTerabitsSecond",
                "StandardUnitCountSecond",
                "StandardUnitNone"
            ]
        },
        "types.Tenancy": {
            "type": "string",
            "enum": [
                "default",
                "dedicated",
                "host"
            ],
            "x-enum-varnames": [
                "TenancyDefault",
                "TenancyDedicated",
                "TenancyHost"
            ]
        },
        "types.VolumeType": {
            "type": "string",
            "enum": [
                "standard",
                "io1",
                "io2",
                "gp2",
                "sc1",
                "st1",
                "gp3"
            ],
            "x-enum-varnames": [
                "VolumeTypeStandard",
                "VolumeTypeIo1",
                "VolumeTypeIo2",
                "VolumeTypeGp2",
                "VolumeTypeSc1",
                "VolumeTypeSt1",
                "VolumeTypeGp3"
            ]
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "description": "Enter the token with the ` + "`" + `Bearer` + "`" + ` prefix.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.opengovernance.io",
	BasePath:         "",
	Schemes:          []string{"https"},
	Title:            "OpenGovernance Service API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
