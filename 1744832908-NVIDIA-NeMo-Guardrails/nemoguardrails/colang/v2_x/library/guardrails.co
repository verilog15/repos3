# meta: exclude from llm
import core

# For guardrails, we override the `_user_said` and `_bot_say` to include calling
# the input and the output rails.

@override
flow _user_said $text -> $event
  """Override core flow for when the user said something."""
  global $user_message

  if $text
    match UtteranceUserAction.Finished(final_transcript=$text) as $event
  else
    match UtteranceUserAction.Finished() as $event

  $text = $event.final_transcript

  $user_message = $text

  await run input rails $user_message


@override
flow _user_saying $text -> $event
  """Override core flow for when the user is saying something."""
  global $user_message
  if $text
    if is_regex($text)
      match UtteranceUserAction.TranscriptUpdated(interim_transcript=$text) as $event
    else
      # This matches to a transcript where after some initial characters it finds $text followed optionally by up to two words
      match UtteranceUserAction.TranscriptUpdated(interim_transcript=regex("(?i).*({$text})((\s*\w+\s*){{0,2}})\W*$")) as $event
  else
    match UtteranceUserAction.TranscriptUpdated() as $event

  $text = $event.interim_transcript
  $user_message = $text
  await run input rails $user_message


@override
flow _user_said_something_unexpected -> $event
  """Override core flow for when the user said something unexpected."""
  global $user_message
  global $last_user_message
  match UnhandledEvent(event="UtteranceUserActionFinished", loop_ids={$self.loop_id}) as $event

  $text = $event.final_transcript
  $user_message = $text
  $last_user_message = $text
  await run input rails $user_message


@override
flow _bot_say $text
  """Core flow for when the bot should say something."""
  global $bot_message
  global $last_bot_message
  global $output_rails_in_progress

  $bot_message = $text
  $last_bot_message = $text

  # We need to avoid running output rails on messages coming from the output rails themselves.
  if not $output_rails_in_progress
    await run output rails $text

  await UtteranceBotAction(script=$text) as $action


flow run input rails $input_text
  """Check user utterances before they get further processed."""
  $input_rails_exist = await CheckFlowDefinedAction(flow_id="input rails")
  if $input_rails_exist
    log "found input rails, checking..."
    await input rails $input_text
    log "input rails passed"


flow run output rails $output_text
  """Check llm responses before they get further processed."""
  global $output_rails_in_progress

  $output_rails_in_progress = True

  $output_rails_exist = await CheckFlowDefinedAction(flow_id="output rails")
  if $output_rails_exist
    log "found output rails, checking..."
    await output rails $output_text
    log "output rails passed"

  $output_rails_in_progress = False
