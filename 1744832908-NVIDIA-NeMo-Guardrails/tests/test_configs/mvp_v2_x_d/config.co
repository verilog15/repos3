# Example flows with instructions

# Simple answer
flow answer question about france
  """Answer the following question: What is the capital of France."""
  bot say "The capital of France it's Paris."

# Mutlimodal answer
flow tell a joke
  """Tell a joke."""
  bot say "Why don't scientists trust atoms? Because they make up everything!"
    and bot gesture "smile"

# Loop
flow count
  """Count from 1 to 5."""
  $count = 1
  while $count <= 5
    bot say "{$count}"
    $count = $count + 1

# Sequence
flow bot ask user for age
  """Ask the user how old she is and response with 'You look younger!' when she answers something."""
  bot say "How old are you?"
  user said "I am 16"
  bot say "You look younger!"

# Branching
flow bot ask user to pick a color
  """Ask user to choose from two offered colors: red and blue then give a answer depending on the user choice."""
  bot say "What color would you like? Red or blue?"
  when user said "Red"
    bot say "I like red!"
  or when user said "Blue"
    bot say "I don't like blue!"

# A little game
flow number guessing game
  """Ask the user to guess a random number between 1 and 100; after each guess let the user know if the number was to low or high. If the user guesses the correct number, congratulate!"""
  bot say "Hi, please guess the random number between 0 and 100"

  $random_number = 66
  $is_correct_number = False
  while $is_correct_number
    user said number
    # The number of the user otherwise None
    $number = 13
    if $number != None
      if $number < $random_number
        bot say "Sorry, this number is too low!"
      elif $number > $random_number
        bot say "Sorry, this number is too high!"
      else
        bot say "Congratulation! This is the correct number!"
        $is_correct_number = True


# Common

@meta(exclude_from_llm=True)
flow user said $text
  match UtteranceUserAction.Finished(final_transcript=$text)

@meta(exclude_from_llm=True)
flow user said something
  match UtteranceUserAction.Finished() as $event

@meta(exclude_from_llm=True)
flow bot say $text
  await UtteranceBotAction(script=$text)

@meta(exclude_from_llm=True)
flow wait
  match SomeRandomEvent()

# Custom

flow bot smile
  bot say "I'm smiling."

flow user expressed greeting
  user said "hi"
    or user said "hello"

flow user provided custom instructions
  user said "do something"

flow bot express greeting $name
  bot say "Hello {$name}!"

flow bot comment unsure how to respond
  bot say "I'm not sure how to respond."
#
#flow user ask question
#  user said "What is the capital of France?"
#    or user said "Who is the president of US?"

#flow question
#  user ask question
#  bot respond to question

flow greeting
  user expressed greeting
  $name = "world"
  #$name = await GenerateValueAction(var_name="name", instructions="Extract the user's name mentioned by the user. Wrap it with double quotes. If not mentioned, return 'world'.")
  bot express greeting $name

flow user unknown intent
  user said "xyz"

flow unknown intent
  user unknown intent
  bot comment unsure how to respond

@meta(exclude_from_llm=True)
flow fallback
  """This is the fallback flow that takes care of unhandled user utterances and will generate a flow continuation."""

  match UnhandledEvent(event="UtteranceUserActionFinished") as $event

  start_new_flow_instance:

  $intent = await GenerateUserIntentAction(user_utterance=$event.final_transcript)
  $exists = await CheckForActiveEventMatchAction(name="FlowFinished", flow_id=$intent)

  if $exists
    send FinishFlow(flow_id=$intent)
  else
    #log "'fallback' -> Generate new flow for intent '{$intent}'"
    send DynamicFlowFinished(flow_id=$intent)

    $flow_info = await GenerateFlowContinuationAction()
    await AddFlowsAction(config=$flow_info['body'])

    send StartFlow(flow_id=$flow_info['name'])
    match FlowStarted(flow_id=$flow_info['name']) as $event_ref
    match $event_ref.flow.Finished()

@meta(exclude_from_llm=True)
flow continuation on undefined flow
  """If we reach a point where we need to start a flow that does not exist, we generate it."""

  match UnhandledEvent(event="StartFlow") as $event

  $exists = await CheckValidFlowExistsAction(flow_id=$event.flow_id)

  start_new_flow_instance:

  if not $exists
    $flow_id = $event.flow_id
    log "'continuation on undefined flow' -> generate new flow '{$event.flow_id}'"
    $flow_source = await GenerateFlowFromNameAction(name=$flow_id)
    await AddFlowsAction(config=$flow_source)
    send StartFlow(flow_id=$flow_id)

@meta(exclude_from_llm=True)
flow do $instructions
  $flow_info = await GenerateFlowFromInstructionsAction(instructions=$instructions)
  await AddFlowsAction(config=$flow_info.body)
  send StartFlow(flow_id=$flow_info['name'])
  match FlowStarted(flow_id=$flow_info['name']) as $event_ref
  match $event_ref.flow.Finished()

@meta(exclude_from_llm=True)
flow custom instructions
  user provided custom instructions
  $instructions = await GetLastUserMessageAction()
  do $instructions

@meta(exclude_from_llm=True)
flow main
  activate greeting
  activate custom instructions
  activate unknown intent
  activate fallback
  activate continuation on undefined flow
  # activate question
  # activate tell the user the weather

  bot say "Welcome! I'm the MVP bot."
  wait
